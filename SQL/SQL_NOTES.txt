============ WELCOME TO SQL =========================

Q.. What is entity?
==> anything in real world is nothing but entity
--------------------------
Q.. What is Attribute?
==> Property of entity is nothing but Attribute.
--------------------------
Q.. What is Data?
==> any fact related to entity is nothing but data 
--------------------------
Q.. What is database?
==> systematic collection of data is nothing but database 
--------------------------
Q.. Classification of database based on How data arrange?
==> 1. Heirarchical database- there is parent child relationship
	2. network database - one entity is associated with many entities 
	3. distributed database - same data stored at mulitiple places 
	4. centralized database - whole data stored at one place.
--------------------------
Q.. Classification of database based on structure of data?
==> 1. Relational database - data store in table format 
	2. Non-relational database - data not stored in table format,it is store in some other format 
	3. object oriented database - data store in object format 
--------------------------
Q.. Example of Relational database?
==> oracle 
	IBM DB 2 
	mysql 
	ms acess 
	ms sql server 
--------------------------
Q.. Example of Non-relational database?
==> MongoDB 
	CouchDB 
--------------------------
Q.. Example of object oriented database?
==> Postgre SQL 
--------------------------
Q.. Difference between DBMS and RDBMS?
==> - DBMS stand for database management system where as RDBMS stand for relational database management system 
	- DBMS is old one where as RDBMS is extention of DBMS 
	- In DBMS data is stored in file format where as in RDBMS data is store in table format 
	- DBMS does not support normalization where as RDBMS support normalization.
	- DBMS does not support Relation where as RDBMS support Relations like one to many etc ...
	- DBMS does not support distributed database where as RDBMS support distributed database 
	- DBMS may or may not follow ACID propoerties where as RDBMS strictly follow ACID properties 
--------------------------
Q.. ACID Properties?
==> ACID confirm that transaction should completely reliable in database
	ACID stand for 
	A=> Atomicity
	C=> Consistency
	I=> Isolation 
	D=> Durability
----------------------------------------------
Q.. What is Atomicity?
==> Atomicity means all or nothing 
	- Either all operation within transaction are successfully completed 
	  and committed to the database or none of them are.If anyone operation fails then 
	  entire transaction is rolled back and data is restored to its original state.
	- To achive this Oracle uses Rollback,Savepoint,commit.
	- Example:
		sending money online : Either money is deducted from your account and added to the receiver's 
		account or whole transaction is fails - no in between 
----------------------------------------------
Q.. What is consistency?
==> Consistency means database must be consistent state before and after the transaction.
	- To achieve this oracle use PK,FK,Triggers
	- If a transaction voilet database rule or constraints,it should be rejected,ensuring that 
	  consistent data exists after the transaction.
	- Example: You can't transfer money more than you have.
----------------------------------------------
Q.. What is Isolation?
==> Multiple transaction can run at the same time without affecting each other's result 
	- oracle uses lock and isolation levels to to isolate the transaction.
	- Oracle feature used: isolation levels (read committed)
----------------------------------------------
Q.. What is Durability?
==> Once a transaction is committed the changes are permanent-even if there is system crash or power failure.
	- Once you send a message and see "delivered" , it say delivered even if your phone dies 
	- Oracle feature used : Redo logs,flashback,Datafiles
----------------------------------------------
Q.. What is SQL?
==> SQL stand for structured query language 
	Structured means fixed format 
	SQL is not case sensative language 
	SQL is used to perform operation on realtional database.
	Relational means data is stored in table format 
--------------------------	
Q.. With the help of SQL which activity we can perform?
		1. we can create database 
		2. we can delete database 
		3. we can create table 
		4. we can drop table 
		5. we can alter table 
		6. we can insert data into table 
		7. we can update existing data 
		8. we can delete data from table
		9. we can view data from table 
--------------------------
Q.. What is difference between ORACLE and SQL?
==> SQL is structured query language used to perform operation on relational database
	where as 
	ORACLE is relational database 
--------------------------
Q.. What is difference between SQL and Mysql?
==> SQL is structured query language used to perform operation on relational databse 
	where as 
	Mysql is realtional database 
--------------------------	
Q.. Types of statement in SQL?
==> All SQL statement is divided into 5 groups 
	1. DDL 
	2. DML 
	3. DQL 
	4. DCL 
	5. TCL 
	
	1. DDL (Data Defination Language)
	=> DDL stand for Data Defination Language 
	=> which include following statement 
		- create 
		- alter
		- drop 
		- rename 
		- comment 
		- truncate 
	
	2. DML 
	=> DML stand for Data Modification Language
	=> DML include following statements 
		- insert 
		- update 
		- delete 
	
	3. DQL 
	=> DQL stand for Data Query Language
	=> DQL include following statements 
		- select 
		
	4. DCL 
	=> DCL stand for Data control Language
	=> DCL include following statements 
		- grant 
		- revoke 
		
	5. TCL 
	=> TCL stand for Transaction control Language
	=> TCL include following statements 
		- commit 
		- rollback 
		- savepoint 
--------------------------
Q.. CREATE Statement?
==> - CREATE is DDL Statement
    - with the help of CREATE statement we can do following things 
	- we can create database 
	- we can create table 
	- we can create view 
	- we can create index 
	- we can create schema 
	- we can create procedure 
	- we can create function 
	- we can create trigger 
	- we can create user 
	- we can create roll 
	
	1. Syntax to create database 
	=> create database database_name
	
	2. Syntax to create table 
	=> - table must have some name 
	   - table must be belong with database 
	   - table must atleast one column 
	   - table can have maximum 1000 columns 
	   - table can have zero or N number of rows 
	   - syntax: 
			create table table_name(clm1_name data_type constraint,clm2_name data_type constraint......N );
			
--------------------------
Q.. When we create table, in which order column get created?
==> In which order we have specified column names in same order column get created.
--------------------------
Q.. Tell me table naming rules?
==> 1. table name can be combination of upper case character(A-Z),lower case character(a-z),
	   digit(0-9) and special symbols #,$ and underscore
	2. Table name should not start with digit or special symbol. it should be start with 
	   either upper case letter or lower case letter.
	3. Blank space is not allowed.
	4. Maximum 30 character allowed for table name 
	5. Keywords not allowed for table name 
	6. within same database two table can't have same name 
--------------------------
Q.. Tell me rule to define column name?
==> 1. column should be contain uppercase letter,lowercase letter,digit
	   or special symbols like $,# and underscore.
	2. column name should not start with digit and special symbols 
	3. column name should not be same with reserve keyword 
	4. blank space is not allowed 
	5. maximum 30 character allowed for column name 
	6. within 1 table two column does not have same name.
--------------------------
Q.. What are table properties?
==> Table must have atleast one column 
	- Every table have unique name 
	- Table can have 0 or N number of records 
	- Table can have minimum 1 and maximum 1000 columns 
--------------------------
Q.. Which symbols are allowed in table name and column name?
==> Table name and column name can be combination of uppercase letter,lowecase letter,
	digit,special symbols like $,# and underscore.
--------------------------
Q.. what is length of column and table name?
==> 30 
--------------------------
Q.. What is maximumn and minimum number of column allowed in 1 table?
==> min 1 and maximumn 1000.
--------------------------
Q.. While creating table i'm getting error like "name is used by existing object",what is meaning 
	of that error and how you resolve it?
==> Meaning=> table name is already exist 
	Reason=> Within same database 2 table can't have same name 
	solution=> provide alternate name to new table.
--------------------------
Q.. Where created tables meta data is available?
==> user created tables meta data is available below view 
	1. user_tables
	2. all_tables
	3. dba_tables
	all these are data dictionary views 	
--------------------------
Q.. What is difference between user_tables,all_tables,dba_tables?
==> 1. user_tables => show only tables created by current user 
	2. all_tables => show all tables accessible to current user.(owned+granted)
	3. dba_tables => show all tables present in database 
					this view is accessible to only dba person.
--------------------------
Q.. What is syntax to create database?
==> create database database_name;
--------------------------
Q.. Data type in oracle?
==> Data type means which type of value we want to store in column 
	Most commonly used data types are 3 and these are 
	1. string 
	2. number 
	3. date
	4. timestamp
	5. blob 
	6. clob 
	7. bfile
--------------------------	
1. String:- string means sequence of character enclosed in single quote is considered as string 
			- To define string value we have 3 data type 
				1. char 
				2. varchar 
				3. varchar2
					
			1. char data type: 
				- char stand for character 
				- char is used to store character type value 
				- Syntax: 
					column_name char(size) constriant ; 
				- size is optional in char data type 
				- char store 1 to 2000 character 
				- char is fixed in length 
				- if you know size in advance then go with char data type.
				
			2. varchar data type: 
				- varchar stand variable length character 
				- variable length character means size get changed on run time 
				- Syntax: varchar(size) 
				- varchar store 1 to 4000 character 
			
			3. varchar2 data type: 
				- varchar2 is same as varchar 
--------------------------
Q.. what is mean by fixed in length?
==> fixed in legth means length of data type is fixed not depend on actual length.
--------------------------
Q.. What is mean by variable in length?
==> length of data type is defined on actual length of value stored.
--------------------------
Q.. When shoud we go with char data type?
==> if you know size advancly then go with char data type.
--------------------------
Q.. when should we go with varchar data type?
==> if you don't know size advancly then go with varchar data type.
--------------------------
Q.. What is difference between varchar and varchar 2 ?
==> functionality wise varchar and varchar2 is same but there is only difference is 
	varchar is developed by ANSI and varchar2 is developed by Oracle.
--------------------------
Q.. What is difference between char and varchar?
==> 1. char stand for character where as 
	   varchar stand for variable length character
	2. char is fixed in length where as 
	   varchar is variable in length 
	3. char store 2000 character where as 
	   varchar store 400 character 
	4. If you know size advancly then you can go with char data type where as 
	   if you don't know size advancly then go with varchar data type 
	5. with respect to memory utilization char is recommended to use where as 
	   with respect to memory utilization varchar is not recommended to use 
--------------------------
Q.. Number data type?
==> Number data type is used to store numeric value.
	Numeric value can be integer or floting 
	Syntax: number(p,s)
	Here p stand for precision and s stand for scale 
	both p and s are optional 
	Precision means total number of digit in number
	Scale means number of digit after decimal point 
	Range of Precision is 1 to 38,precision is optional.if we don't specify precision then bydefault it 38
	Range of Scale is -84 to 127.Scale is optional,if we don't specify scale then 0
--------------------------
Q.. What happen if we try to insert value that exceeds precision defined in number(p,s)?
==> we will get an error 
--------------------------
Q.. what happen if we try to insert value that exceeds scale defined in number(p,s)?
==> We don't get an error.Oracle engine automatically roundup the scale value to satisfied
	scale value.
--------------------------
Q.. Date data type?
==> Date data type is used to store date type value 
	Date is store in "DD-MON-YY" format 
	Range of date is from 01-jan-4712 BC to 31-dec-9999 AD 
	To convert date data type into string use to_char() function 
	To convert string type value into date use to_date() function 
	Date use 7 byte of storage 
--------------------------
Q.. Suppose I execute below statement 
	insert into employee(empno,empname,dob) values(1,'yash,'01-july-24');
	What date value is insert 1925 or 2025?
==> 2025 is inserted if oracle use RR 
	1925 is inserted if oracle use YY 
--------------------------
Q.. What is default data format in oracle?
==> Date data type store date in oracle 
	- default display format depends on the NLS_DATE_FORMAT of database.
	- NLS stand for national language support 
	- In most oracle installation the default date format is 'dd-mon-rr'
	- To check default format we have syntax 
		select * from nls_session_parameters where parameter='NLS_DATE_FORMAT'
	- We can change default date format 
		alter session set NLS_DATE_FORMAT='dd-mon-yyyy';
		this query will only change format for current session.
--------------------------
Q.. What is range of date data type?
==> 1 january 4712 BC to 31 December 9999 AD 
	BC stand for before christ 
	AD stand for anno domini
--------------------------
Q.. Century handling rule?
==> 1. century determination with RR 
	-> If we have RR format then oracle tries to guess century based on current year 
		if year is 00-49 : oracle interprets as 2000 to 2049 
		if year is 50-99 : oracle interprets as 1950 to 1999
	
	2. Century determination with YY 
	-> If we have YY format then oracle interprets two digit year as 20th century 
	   i.e 19XX
--------------------------
Q.. Conversion function to convert DATE data type into STRING and STRING into DATE?
==> TO_CHAR: convert date type value into STRING it accpet two input argument 
			 first is date value and second is date format 
			 TO_CHAR(date_value,'date_format')
	
	TO_DATE: convert STRING type value into date 
		Syntax: TO_DATE('dd-mon-yy')
--------------------------
Q.. BLOB data type?
==> BLOB stand for Binary Large Object 
	this data type is used to store unstructured binary data 
	unstructured means there is no fixed format 
	example: image,video,audio
	maximum size is 4GB 
--------------------------
Q.. CLOB data type?
==> CLOB stand for character large object 
	this data is used to store texual characters 
	example: pdf,word 
	maximum size is 4gb 
--------------------------
Q.. BFILE data type?
==> BFILE stand for Binary file 
	This data type is used to store locator of external file 
	The actual file stored in OS file system,not inside database.The databse store only pointer of file 
	maximum size is 4gb 
--------------------------
Q.. Insert statement?
==> Insert is DML statement 
	Insert is used to insert data into table 
	Insert has two forms 
		Form 1: Insert without column name 
			insert into table_name(clm1_value,clm2_value)
		
		Form 2: Inserting value into specific column 
			insert into table_name(clm1_name,clm2_name,....,N) values(Clm1_value1,Clm2_value2,.....,N)
--------------------------
Q.. How many records can we insert at a time using insert into statement?
==> only one 
--------------------------
Q.. If we want to insert 100 statement then how many insert statement we need to write?
==> 100
--------------------------
Q.. What is null value?
==> null is special type of value it is different than 0 or blank.
	null means not present 
--------------------------
Q.. What is difference between null and 'null'?
==> firt null is consider as special value where as 
	seocond null is consider as string value 
--------------------------
Q.. if two user working on same table. 1 user inserting data into table another is selecting data from table 
	but 2nd user not able to view data inserted by 1st user,what is the problem?
==> 1st user is not committed data in table that's why 2nd user not able to view the data 	
--------------------------
Q.. how to copy data from one table and insert into another table?
==> insert into Table_name(clm1_name,clm2_name...N)select clm1_name,clm2_name....N from source_table_name
--------------------------
Q.. how to copy structure of table without copying its data in oracle?
==> create table new_table_name as select * from old_table_name where 1=0; 
--------------------------
Q.. how to create new table from old table in oracle?
==> create table new_table_name as select * from old_table_name;
--------------------------
Q.. Select statement?
==> select is DQL statement 
	select statement is used to fetch data from table 
	by using select statement we can fetch data from single or multiple table 
	Syntax: 
		select clm1_name,clm2_name....N  from table_name where condition group by column_name 
		having group_function column_name condition order by column_name ;
		
--------------------------
Q.. Where clause?
==> Where clause is used to apply condition and filter data 
	Where clause is used in update,delete and select statement
--------------------------
Q.. Operator in SQL?
==> Operator is used to perform some opration
	there are multiple type of Operator in SQL 
	1. Arithmatic operator 
		- Addition +
		- substraction - 
		- multiplication *
		- division  /
		- modulo division %
		
	2. Comparison Opearator
		- Equal to =
		- not equal to !=  or <>
		- less than <
		- greater than >
		- less than equal to <=
		- greater than equal to >=
		
--------------------------
Q.. What is dual in Oracle?
==> Dual is dummy table in oracle 
	Dual is used for testing purpose 
	Dual has one column and zero row 
--------------------------
Q.. What is use of Commit?
==> commit is used to commit the change or save the changes in database.
	Commit the changes permanently in the database.
--------------------------
Q.. Which statement need to commit and why?
==> DML statements need to commit because DML statements are not auto commit.
--------------------------
Q.. What is Rollback?
==> Rollback means to undo the changes or move changes to its previous stage.
	DML statement need to Rollback.
--------------------------
Q.. We can Rollback DML statement but we can't Rollback DDL statement Why?
==> DDL statement are auto committed where DML Statements are not auto committed.
--------------------------
Q.. mod() function in oracle?
==> mod() function is used to find remainder in oracle 
	mod() function accept two input argument 1. number 2. divisor 
	
	for ex. 
		select mod(10,2) from dual ===> 0
--------------------------
Q.. suppose i have employee table with column empno,empname,salary.
	employee table has 10 rows. suppose i execute below queries,what will happen?
	
	1. select 1 from employee?
	=> 10 rows will return with value 1.
	
	2. select 1,2 from emplyee?
	=> it display two column with name 1 and 2 
	   it display 10 rows.first column values are as 1 and second column with values 2.
	
	3. write sql query to disply all employee whose salary is greater than 50000.
	=> select * from employee where salary > 50000.
--------------------------
Q.. What is logical operator?
==> there are 3 type of logical operator
	1. AND 
	2. OR 
	3. NOT 
--------------------------------------
Q.. What is AND operator?
==> AND is logical operator 
	it is used to filter data based on some condition 
	there are 2 condition 
	if 1st condition is true and 2nd condition is false then end result is false 
	if 1st condition is false and 2nd condition is true then end result is false 
	if 1st condition is true and 2nd condition is true then end result will be true 
	if both codition is false then end result will false 
-----------------------------------------
Q.. What is single row comparision operator?
==> The operator which oprate on single row is nothing but single row operator.
-----------------------------------------
Q.. What is multi row comparision operator?
==> The operator which operate on multiple row is nothing but multiple row operator.
-----------------------------------------
Q.. What is "IN" operator?
==> IN operator is used to specify the values in where clause.
-----------------------------------------
Q.. How many values we can specify inside "IN" operator?
==> 1000.
-----------------------------------------
Q.. What is "NOT IN" operator?
==> if we don't want to specify value inside where clause.
-----------------------------------------
Q.. What 'IS NULL' operator?
==> IS NULL operator is used to check column value is null or not 
	NULL is special type of value 
	NULL means value is not present 
	it is not same to numeric 0 or blank space 
------------------------------------------
Q.. What is difference between NULL,0 and blank?
==> Null means not present where as 
	Zero is numeric value 
	blank means empty string with no value 
------------------------------------------	
Q.. What is "IS NOT NULL" operator?
==> "IS NOT NULL " is used to check column value is not null.
------------------------------------------
Q.. what is "BETWEEN AND " operator?
==> "BETWEEN AND" operator is used to specify the range 
	for eg
		we want to filter salary is between 1k to 2k 		
------------------------------------------
Q.. What is "NOT BETWEEN AND" operator?
==> "NOT BETWEEN AND" operator is used to specify the range is not between 
	for e.g 
		if we want employee name whose salary is not between 1k and 2k then 
		syntax will be like 
		select empname from employee_table where salary not between 1k and 2k 
------------------------------------------
Q.. What is "LIKE" operator?
==> "LIKE" operator is used to find pattern matching 
	To generate pattern we use 
	1. % 
	2. _ (underscore)
	
	% stand for symbol match for any number of character 
	_ stand for match only one character 
------------------------------------------
Q.. write query to disply employee name whose name start with 'A'?
==> select * from employee where empname like 'A%'
------------------------------------------
Q.. write query to disply employee name whose name end with 'A'?
==> select * from employee where empname like '%A'
------------------------------------------
Q.. write query to display employee whose name contain 'e'?
==> select * from employee where empname like '%e%'
------------------------------------------
Q.. write employee whose name contain only 4 character?
==> select * from employee where empaname like '____'
------------------------------------------
Q.. What is "UPDATE" statement?
==> UPDATE is DML statement 
	UPDATE statement is used to update exsiting data in table 
	syntax: 
		update table_name set column1_name=new_value column2_name=new_value ... N where condition 
------------------------------------------
Q.. What is "DELETE" statement?
==> DELETE is DML statement 
	DELETE is used to delete exsiting data 
	Syntax: 
		delete from table_name where condition 
------------------------------------------
Q.. Create statement need not to commit but insert update delete need to commit,Why?
==> CREATE is DDL statement and DDL statement are auto committed where as 
	INSERT,UPDATE,DELETE are DML statement and DML statement are not auto
	committed that why need to commit.
------------------------------------------
Q.. Create table statement can't rollback where as insert update delete statement can rollback?
==> create is DDL statement and DDL statement are auto committed so we can't rollback it.
	where as insert,update,delete are DML statement and DML statement are not auto committed.
	so we can rollback DML statement.
	Once DML statement are committed then we can't rollback it.
------------------------------------------
Q.. What is "order by" clause?
==> If we want to sort data in either in ascending or descending order then 
	we need to use order by clause.
	Syntax: 
		order by ASC|DESC
------------------------------------------
Q.. What is purpose of Order by clause?
==> To sort the result in ascending or descending order 
------------------------------------------
Q.. Order by clause is optional or manadatory in select statement?
==> It is an optional
------------------------------------------
Q.. If we are not using order by clause then in which order records get displayed?
==> If we are not providing order by clause then in which order we insert the 
	data into the table in that same order data will get reflect.
------------------------------------------
Q.. In select statement,what is the position of ORDER BY clause?
==> At the end of SELECT statement 
------------------------------------------
Q.. Syntax to sort the result set based on two columns?
==> ORDER BY column1_name ASC|DESC,column_2_name ASC|DESC
------------------------------------------
Q.. What is precedence order of sorting in Order by clause for the following things?
	1. Special symbols 
	2. Upper case character 
	3. Lower case character 
	4. Digit 
==> sorting is based on ASCII code value of character 
	Precedence order in ASCII
	1. special symbol 
	2. digits 
	3. upper case character 
	4. lower case character 
------------------------------------------
Q.. How the date value are sorted in order by clause?
==> Date values are not sorted as strings - they are sorted based on 
	their internal date-time representation.
	- When we use ORDER BY on a date column 
		ASC=> earlist date first,latest date last 
		DESC=> latest date first,earlist date last 
	- So when we sort by a DATE column 
		first SQL compare the year 
		if year is the same -> compares the month 
		if month is the same -> compares the day.
		if day is the same -> compares the hours 
		then minutes
		then seconds 
------------------------------------------
Q.. Can we use order by clause to apply sort condition for 2 column?
==> yes 
	Syntax: 
		order by column_name ASC|DESC,column2_name ASC|DESC 
------------------------------------------
Q.. Can we use group function in order by clause ?
==> yes we can 
------------------------------------------
Q.. In which statement we can use order by clause?
==> select statement
------------------------------------------
Q.. Position of order by clause? 
==> at the end of query.
------------------------------------------
Q.. What is aliasing in oracle?
==> aliasing means providing an alternative name to column or table
	aliasing is applicable only in select statement.
	
	To providing aliasing there are 2 ways 
	1. using "as" keyword.
		select empname as e from table_name 
	2. By using double quote.
		select * from table_name "abc"
------------------------------------------
Q.. What are the Type of functions?
==> 1. Predefined function 
	2. User defined function
------------------------------------------
Q.. what is mean by predefined functions?
==> the functions which are provided by SQL is nothing but predefined functions
------------------------------------------
Q.. Types of Predefined functions?
==> 1. Single row functions 
	2. Multi row functions or group functions or aggregate functions
	3. Analytical functions or window functions
------------------------------------------
Q.. What is single row functions?
==> the functions which are operator on single row is nothing but single row functions
------------------------------------------
Q.. What is multi row functions?
==> The functions which are operate on multiple row or group of rows is nothing but multi row functions.	
------------------------------------------
Q.. What is aggregate functions?
==> The functions which perform calculation across the set of rows related to current row 
	without collapsing into groups is called Analytical function or window function.
------------------------------------------
Q.. Classification of single row function?
==> 1. character function: Operate on character type values 
	2. number function : Operate on number type values 
	3. Date function : Operate on date type values 
	4. Conversion function: Convert one data type value into another 
	5. General function: used for general purpose.
------------------------------------------
Q.. List out single row character function?
==> 1.lower		2.upper
	3.initcap 	4.length 
	5.concat 	6.replace
	7.substr 	8.LPAD
	9.RPAD		10.LTRIM
	11.RTRIM	12.Trim
	13.INSTR	14.ASCII
	15.chr 		16.Translate
------------------------------------------
Q.. what is "lower" function?
==> lower function accept one input argument 
	it convert uppercase character into lowercase character
	it return character type value 
------------------------------------------
Q.. what is "upper" function ?
==> upper function accept one input argument 
	it convert all character into uppercase character.
	it return character type value
------------------------------------------
Q.. What is "initcap" function?
==> initcap function accept one input argument.
	it is used to convert every word's first character into uppercase.
------------------------------------------
Q.. what is "length" function?
==> length function accpet one input argument.
	it is used to calculate length of string 
------------------------------------------
Q.. What is "concat" function?
==> concat function is used to join two string.
	it accpet two input argument.
	Syntax: 
		concat(argument1,argument2)
------------------------------------------
Q.. What is "replace" function?
==> replace function is used to replace single character or multiple character from source string 
	it accept three input argument first input string and 
	second is source character and third target char
	Syntax: replace(source_string,source_char,target_char);	
------------------------------------------
Q.. What is "substr" function?
==> substr function is used to find substring from source string 
	it accept 3 input arguments
	1. Source string 
	2. Start index 
	3. length of resultant string (optional)
	
	Syntax: 
		substr(source_string,start_index,length_of_resultant_string);
------------------------------------------
Q.. What is "LPAD" function?
==> meaning of PAD is to ADD 
	this function is used to add extra character at left side of source string  
	this function take 3 input argument
	Syntax: 
		LPAD(source_string,N,target_character)
	
		value of N should be zero or negative 
		
------------------------------------------
Q.. What is "RPAD" function?
==> meaning of RPAD is to add 
	this function is used to add extra character at right side of source string 
	this function take 3 input argument 
	Syntax; 
		RPAD(source_string,N,target_char)
	value of N should be zero or negative	
------------------------------------------
Q.. What is "LTRIM" function?
==> LTRIM function is used to remove extra character or blank space from left side of source string 
	this function take 2 input arguments 
	LTRIM(source_string,target_character)
------------------------------------------
Q.. What is "RTRIM" function?
==> RTRIM function is used to remove extra character or blank space from right side of source string
	this function take 2 input arguments 
	RTRIM(source_string,target_character)
------------------------------------------
Q.. what is trim function?
==> trim function is used to remove extra character or blank space from both side of source string 
------------------------------------------
Q.. What is instr function?
==> this function is used to find numeric position of given character in string 
	this function accept four input arguments 
	Syntax:
		instr(sourceString,search_char,startIndex,Occurance)
	Here startIndex and Occurance are optional 
	if we don't specify startIndex then bydefault it is consider 1 
	if we don't specify Occurance then it consider first occurance.	
------------------------------------------
Q.. ASCII(char)?
==> This function return ASCII code of first character.
	this function accept one input argument of string type
------------------------------------------
Q.. Chr() function?
==> This function is used to find corrosponding character for given ASCII code.
	Chr() function accept one input argument of number type
------------------------------------------
Q.. translate() function?
==> this function is used to replace character from source string based on position,
	not full substring like replace 
	- translate function accept 3 input arguments 
		Syntax: 
			translate(inputString,sourceString,targetString)
			
	- For e.g 
		select translate('abc-xyz','abc-','LMK') from dual;
	  => OP => LMKxyz
		here a=> replace with L
			 b=> replace with M 
			 c=> replace with K
			 - => for - no corrosponding character in target string so it get removed.

	- For e.g 
		select translate('abc-xyz','abc-','LM') from dual;
	   => OP => LMxyz
		here a=> replace with L 
			 b=> replace with M 
			 c=> for c no corrosponding character in target string so it get removed 
			 - => for - no corrosponding character in target string so it get removed 
------------------------------------------
Q.. List out single row number function?
==> 1.ABS() 	2.CEIL() 	3.FLOOR()
	4.POWER() 	5.SQRT() 	6.ROUND()
	7.TRUNC() 	8.MOD()		9.GREATEST()
	10.LEAST()
------------------------------------------
Q.. ABS(n) function?
==> ABS stand for absolute.
	Absolute means positive value 
	this function accept one input argument of number type 
	and return absolute value of given number.
	
	- for e.g 
		select ABS(-20) from dual 
		=> 20 
------------------------------------------
Q.. CEIL(n) function?
==> - CEIL(n) function is used to round up given number value and return number which is 
	  less than or greater than given number.
	- This function accept one input argument of number type 
	 
		i.e this function round up the given number.
	
	- for e.g 
		select CEIL(123.456) from dual;
	    OP=> 123
------------------------------------------
Q.. FLOOR(n) function?
==> - This function used to round down given number and return number which is 
	  less than or equal to given number.
	- This function accept one input argument of number type
	i.e this function round down the given number.
	
	- for e.g 
		select FLOOR(123.456) from dual;
	  OP=> 123
------------------------------------------
Q.. Power(m,n) function?
==> this function returns power of number 
	this function accept two input arguments of number type 
	
	i.e return m raised to power n 
	
	- for e.g 
		select power(2,2) from dual;
		=> 4
------------------------------------------
Q.. SQRT(n) function?
==> SQRT stand for square root.
	this function is used to find square root of given number.
	this function accept one input argument of number type.
	
	- for e.g 
		select SQRT(4) from dual?
		=> 2
------------------------------------------
Q.. round() function?
==> round() function is used to round number upto specified scale value.
	this function accept two input arguments 
	first input argument is number and second input argument is scale 
	Syntax:- round(input_number,scale)
	scale is optional in argument.if we don't specify scale then by default it consider 0
	
	for e.g 
		1. select round(123.456) from dual;
		=> 123
		
		2. select round(123.678) from dual;
		=> 124
		
		3. select round(123.456,1) from dual;
		=> 123.5
		
		4. select round(123.678,1) from dual;
		=> 123.7
		
		5. select round(123.456,-1) from dual;
		=> 120
		
		6. select round(123.456,-2) from dual;
		=> 100 
		
		7. select round(4567.234,-1) from dual;
		=> 4570
		
		8. select round(4564.234,-1) from dual;
		=> 4560
		
		9. select round(null,1) from dual;
		=> null
------------------------------------------
Q.. TRUNC() function 
==> TRUN() function is used to remove part of number without rounding 
	it can be used on numeric values or dates 
	Syntax: 
		TRUNC(input_number,scale)
		
	for e.g 
		1. select trunc(123.456) from dual;
		=> 123
		
		2. select trunc(123.456,1) from dual;
		=> 123.4
		
		3. select trunc(123.456,-1) from dual;
		=> 120
------------------------------------------
Q.. mod() function?
==> mod() function stand for modulo 
	it is usd to find remainder.
	Syntax: 
		mod(input_number,divisor)
	this function accept 2 input argument 
	first is input number 
	second is divisor.
------------------------------------------
Q.. GREATEST(n1,n2,,,,,,) function?
==> this function return largest value from provided number 
------------------------------------------
Q.. LEAST(n1,n2,n3....) function?
==> this function return smallest value from provided number 
------------------------------------------
Q.. Size of Date data type?
==> it accept 7 character for date 
	if we enter timestamp then it will accept 11 character 
------------------------------------------
Q.. Sysdate() function?
==> sysdate function stand for system date 
	sysdate means today's date 
	sysdate does not accept input from user but it will take input from system 
	For e.g 
		select sysdate from dual;
------------------------------------------
Q.. systimestamp function?
==> this function returns today's date and current time 
	for e.g 
		select systimestamp from dual;
------------------------------------------
Q.. current_date function?
==> this function return today's date 
	for e.g 
		select current_date from dual;
------------------------------------------
Q.. current_timestamp function?
==> this function return today's date and current time 
	for e.g 
		select current_timestamp from dual;
------------------------------------------
Q.. sysdate function and current_date return today's date why we Oracle introduce 2 function 
	for same functionality?
==> In Oracle sysdate and current_date return the current date and time but there is an important 
	difference related to time zones 
	-> sysdate return database server's date and time 
	-> current_date return user session's time zone date 
	-> based on your requirement you can choose sysdate and current_date function 
------------------------------------------
Q.. What is difference between systimestamp and current_timestamp?
==> systimestamp return database server's date and time 
	current_timestamp return user session's time zone date and time 
	Based on your requirement you can choose systimestamp and current_timestamp 
------------------------------------------
Q.. Months_between function?
==> this function return number of months between two date.
	this function take two input arguments 
	return type of this function is integer 
	
	for e.g 
		1. select months_between(sysdate,'19-JUN-2024') from dual
		=> 12
		
		2. select months_between(sysdate,null) from dual;
		=> null
		
		3. select months_between('11-07-2000','11-07-2025');
		=> error 
------------------------------------------
Q.. Extract function?
==> this function month,day or year from provided date.
	
	1. To extract year 
	=> extract (year from sysdate)
	
	2. To extract day 
	=> extract (day from sysdate)
	
	3. To extract month 
	=> extract (month from sysdate)
------------------------------------------
Q.. Round() function?
==> round function is used to round number and date value 
	round function accept two input argument
	By using round function we can round month value,year value,day value.
	Syntax: 
		round(input_date,month);
	
	- if we round month then for 1-15 it will reflect 1 of same month 
	  and for 16 to 30 it will reflect 1 for next month 
	- if we round year for jan to june then it will reflect 1 jan of same year 
	  and for july to dec then it will reflect 1 jan of next year 
------------------------------------------
Q.. trunc() function?
==> we can trunc() year,day,month
	for year it always return 1 jan of same year 
	for month it always return 1 date of same month 
	for day it always return 1 day of week 
------------------------------------------
Q.. Conversion functions?
==> Conversion data type is used to convert one data type into another data type.
	There are two type of conversion 
	1. implicit conversion 
	2. explicit conversion 
	
	1. Implicit conversion :
		Oracle engine automatically convert one data type into another data type 
		is called Implicit conversion 
		
	2. Explicit conversion: 
		Programmer convert one data type into another is nothing but explicit conversion
		
		In explicit conversion we have 3 types 
		1. Number
		2. Date 
		3. String 
		
		To convert one data type into another we have 3 functions 
		1. TO_NUMBER :- Convert string data type value into number 
		2. TO_CHAR :- Convert date,number type value into string 
		3. TO_DATE :- Convert strig date type value into date
------------------------------------------
Q.. General functions?
==> 1. NVL()
	2. NVL2()
		
		1. NVL()
		=> NVL() stand for null value 
		   nvl() function accept 2 input argument 
		   nvl(expression1,expression2)
		   if expression1 is null then consider 2 expression 
		   if expression 1 is not null then it consider 1st expression
		   
		2. nvl2()
		=> nvl2() function accept 3 input argument 
		   nvl2(expression1,expression2,expression3)
		   if expression 1 is null then it consider 3rd expression 
		   if expression 1 is not null then it consider 2nd expression 
------------------------------------------
Q.. What is difference between nvl() and nvl2()?
==> nvl() accept one input argument where as nvl2() accpet 3 input argument 
	in nvl() 1st input argument is null then it consider 2nd argument where as
	in nvl2() 1st input argument is null then it consider 3rd expression 
	in nvl() 1st input argument is not null then it consider 1st expression where as 
	in nvl2() 1st input argument is not null then it consider 2nd expression.
------------------------------------------
Q.. What is mean by group function?
==> function which operate on multiple rows or multiple values is nothing but group function.
	- there are 5 group function 
		1. min
		2. max 
		3. avg 
		4. sum
		5. count 
------------------------------------------
Q.. What is the position of group function?
==> group function is used after select statement and after having clause 
------------------------------------------
Q.. sum() function?
==> sum() stand for summission
	sum() function is used to calculate summission 
	this funtion accept one input argument of number type 	
------------------------------------------
Q.. avg() function?
==> avg() stand for average 
	avg() function is used to calculate average 
	this function accept one input argument of number type 
------------------------------------------
Q.. MIN() function?
==> min() stand for minimum
	min() function is used to calculate minimum value 
	this function accept one input argument of character or date or number type 
------------------------------------------
Q.. MAX() function?
==> max()stand for maximum.
	max() function is used to calculate maximum value 
	this function accept one input argument of character or date or number type 
------------------------------------------
Q.. Count() function?
==> count function count number of record present in table 
	count() has 3 form 
	1. count(*)
		=> it will display number of record present in table 
		=> it will display null and duplicate values
	2. count(column_name)
		=> it will display number of record present in table 
		=> it will display duplicate values but does not displys null values 
	3. count(distinct column_name)
		=> it will display number of record present in table 
		=> it does not display duplicate and null values 
------------------------------------------
Q.. group by clause?
==> group by clause is used to group of same values 
	group by clause used in select statement 
	we can specify single or multiple columns 
	position of group by clause 
		=> if you are using where clause then use group by clause after where clause
		=> if you are not using where clause then use group by clause after table name 
		=> if you are using order by clause then use order by clause at the end of query 
------------------------------------------
Q.. Having clause?
==> having clause is used to apply the condition on aggregate result 
	Syntax: 
		having group_function_name column_name 
	
	- we can't use group function infront of where clause to apply the condition By mistake 
	  we use group function infront of where clause then we will get an error 
	  so to overcome this problem having clause is introduced 
------------------------------------------
Q.. Can we use group function in order by clause ?
==> yes we can 
------------------------------------------
Q.. What is mean by constraint?
==> Constraint means restriction 
	there are 6 type of constraint 
	we apply constraint on column not on table 
	To ensure the accurancy and relibility of data 
	and to avoid wrong data insertion in table 
------------------------------------------
Q.. What are different level of constraint?
==> 1. column level constraint 
	=> constraint applied on single column is considered as column level constraint 
	
	2. table level constraint
	=> constraint applied on group of column is considerd as table level constraint.
------------------------------------------
Q.. When we apply constraint?
==> At the time of table creation and after the table creation.
------------------------------------------
Q.. Type of contraint?
==> there 6 type of constraint 
	1. primary key 
	2. foreign key 
	3. unique key 
	4. not null 
	5. default 
	6. check 
------------------------------------------
Q.. Primary key?
==> One table have only one primary key constraint 
	One table have only one composite primary key 
	To apply primary key on column we use primary key keyword 
	primary key column does not allow duplicate values 
	primary key column does not allow null values 
	primary key is combination of not null and unique key 
	we can use primary key as foreign key in other table 
------------------------------------------
Q.. Unique key?
==> One table have one or more unique key constraint 
	To apply unique key we use unique keyword
	A table have one or more composite unique key constraint 
	we can apply constraint at the time of table creation or after table creation 
	unique key column does not allow duplicate values 
	unique key column allow null values 
	
	Syntax: 
		1. without constraint keyword 
				column_name data_type unique 
				
		2. with constraint keyword 
			column_name data_type constraint Name_of_constraint unique 
			
		3. composite unique key 
			column_name data_type,column2_name data_type,column3_name data_type,
			constraint Name_of_constraint unique(column2_name,column3_name)
------------------------------------------
Q.. Not null constraint?
==> To apply not null constraint we use 'not null' keyword 
	one table have one or more than one not null constraint 
	composite not null constraint is not allowed 
	not null constraint does not allowed null values 
	not null constraint allows duplicate values 
	we can apply not null constraint without or with constraint keyword
	we can't apply table level not null constraint 
------------------------------------------
Q.. default constraint?
==> while inserting record in table if we don't specify value of column then bydefault 
	null value assign to that column instead of null if we want to insert some default 
	value then apply default constraint on that column
	- one table have one default or more than one default constraint 
	- To apply default constraint we use default keyword.
	- we can't apply default constraint with constraint keyword 
	- composite default constraint is not allowed 
	- we can apply default constraint on single column and without constraint keyword 
	- default constraint allows duplicate values 
	- default constraint allows null values 
	- by default orcle not assign name to default constraint 
	- we can't drop default constraint 
	- we can add other constraint on default constraint column if condition satisfied
------------------------------------------
Q.. can we apply default constraint using constraint keyword?
==> NO 
------------------------------------------
Q.. what is the name assigned to default constraint?
==> Oracle does not assign any name to default constraint.
------------------------------------------
Q.. how to view default constraint name?
==> Oracle does not assign any name to default constraint 
------------------------------------------
Q.. can we drop default constraint?
==> No we can't drop default constraint but we can add other constraint on that 
	column if condition satisfied
------------------------------------------
Q.. How to check default value assigned to column?
==> we can check in 'ALL_TAB_COLUMNS'
	for that purpose query will be like 
		select * from all_tab_columns
------------------------------------------
Q.. check constraint?
==> check constraint is used to check value before insertion or updation 
	- To define check constraint we use 'check' keyword 
	- one table have one or more than one check constraint
	- one table have one or more than one composite constraint keyword
	- check constraint allows null and duplicate values 
	- we can apply check constraint without or with constraint keyword 
------------------------------------------
Q.. foreign key constraint?
==> Primary key column or Unique key column of one table is refered in another table 
	then that column is called foreign key column 
	- purpose of foreign key is to establish relationship between two tables 
	
	Q. How to decide which table primary key or unique key column is refered in 
	   another table?
	=> Based on relationship between two tables we need to decide which table 
	   primary key column or unique key column is refered in another table 
	   
	# relations
	=>  one to one
		=> in one to one ralation primary key column of one's table is refered in 
			another table and we need to apply unique constraint on that column 
			=> using without constraint  
				create table country(country_code number primary key,country_name varchar(90))
				=> Table created
				create table capital(capital_code number primary key,capital_name varchar(90),
				country_capital_code number references country(country_code),
				constraint country_uk unique(country_capital_code));
				=> Table Created 
			
			=> using with constraint keyword
				create table country(country_code number primary key,country_name varchar(90))
				=> Table created
				create table capital(capital_code number primary key,
				capital_name varchar(90),
				country_capital_code number,
				constraint cou_cap_code foreign key(country_capital_code) references country(country_code),
				constraint co_uk unique(country_capital_code))
				=> Table created 
				
			=> using table level constraint 
				create table person(aadhar_number number,passport_number number,
				person_name varchar(90),constraint aadhar_pass primary key(aadhar_number,passport_number));
				=> Table Created
				create table countrys(country_code number,country_name varchar(90),aadhar_code number,
				passport_code number,
				constraint addhar_pass foreign key(aadhar_code,passport_code) references person(aadhar_number,passport_number),
				constraint unkey unique(aadhar_code,passport_code));
			
		one to many 
		=> for one to many one's table primary key column is refered in many's table  
				for e.g 
					create table department(dept_id number primary key,dept_name varchar(90));
					=> Table Created 
					create table employee(emp_name varchar(90),
					dept_code number constraint foreign key(dept_code) references department(dept_id))
					=> constraint specification not allowed her 
			=> using column level 
				create table department(dept_id number primary key,dept_name varchar(90));
				=> Table Created 
				create table employee(emp_name varchar(90),dept_code number references department(dept_id))
				=> Table Created 
				
			=> using constraint keyword 
				create table department(dept_id number primary key,dept_name varchar(90));
				=> Table Created 
				create table employee(emp_name varchar(90),dept_code number,
				constraint dep_fk foreign key(dept_code) references department(dept_id))
				=> Table created

		many to one 
		=> for many to one one's table primary key column is refered in many's table 
			=> using column level 
				create table department(dept_id number primary key,dept_name varchar(90));
				=> Table Created 
				create table employee(emp_name varchar(90),dept_code number references department(dept_id))
				=> Table Created 
				
			=> using constraint keyword 
				create table department(dept_id number primary key,dept_name varchar(90));
				=> Table Created 
				create table employee(emp_name varchar(90),dept_code number,
				constraint dep_fk foreign key(dept_code) references department(dept_id))
				=> Table created
				
		many to many 
		=> for many to many both table primary key column is used in third table 
			which will refere primary key column of both table 
			=> In many to many column level foreign key constraint is not allowed 
------------------------------------------
Q.. ON DELETE CASCADE and ON DELETE SET NULL?
==> In parent child relationship if we try to delete parent record we will get an error 
	- So in this case we need to delete child record first then we need to delete parent record 
	  OR set child record to null then delete parent record 
	- If parent record is not available in child then we can delete directly 
	
	=> ON DELETE CASCADE=> Automatically delete child records when parent record is deleted 
	=> ON DELETE SET NULL=> Automatically set null value to child record when parent record is deleted 
	
	=> ON DELETE CASCADE	
		=> ON DELETE CASCADE is applied on child table not on parent table this will delete record 
			from child table when we delete record from parent table 
			f.g 
				create table department(dept_id number primary key,dept_name varchar(90))
				=> Table Created 
				create table employee(emp_name varchar(90),
				dept_code number references department(dept_id) ON DELETE CASCADE);
				=> Table Created
	
	=> ON DELETE SET NULL => this will set null values to child table column when we delete record 
							 from parent table 
			f.g 
				create table department(dept_id number primary key,dept_name varchar(90))
				=> Table Created 
				create table employee(emp_name varchar(90),
				dept_code number references department(dept_id) ON DELETE CASCADE);
				=> Table Created
------------------------------------------
Q.. How to find constraint below to perticular table?
==> To find constraint we have one table USER_CONSTRAINTS 
	from table we can get constraint name or how many constraint below to perticular table 
	query for that is 
		select * from user_constraint where table_name='EMPLOYEE';
------------------------------------------
Q.. How to enable constraint?
==> using alter keyword we can enble or disable constaint 
	Syntax:- 
		alter table table_name enable/disable constraint name_of_constraint  
------------------------------------------
Q.. How to drop constraint?
==> using alter keyword we can drop constraint 
	Syntax:- 
		alter table table_name drop constraint name_of_constraint
------------------------------------------
Q.. How to change table and column properties?
==> Every table has name and column 
	every column has either constraint or not constraint 
	every constraint has name 
	To change this propoerties we have ALTR statement 
------------------------------------------
Q.. what is ALTER statement?
==> ALTER is DDL statement 
	it is used to change structure of table 
	with the help of ALTER statement we can do following things 
		- we can add new columns 
		- we can add constraint on existing columns 
		- we can drop single or multiple columns 
		- we can drop constraint 
		- we can change data type of existing column 
		- we can change size of column 
		- we can change table name 
		- we can enable or disable constraint
------------------------------------------		
Q.. What are the different options in ALTER statement 
==>		- ADD
		- DROP 
		- MODIFY 
		- RENAME 
		- ENABLE 
		- DISABLE 
------------------------------------------	
Q.. What is ADD option in ALTER?
		with the help of ADD option we can add following things
		1. we can add single columns or multiple columns 
		2. we can add constraint on exsiting columns 
		
		1. Adding column or columns 
		=> Syntax:- 
			alter table table_name add(column_name1 data_type constraint,column_name2 data_type constraint..N)
			
			1. Using without constraint keyword 
				create table employee(empid number)
				alter table employee add mobile_no number primary key
				alter table employee add mobile_no_ number unique
				alter table employee add mobile_no__ number references department(dept_id)
				alter table employee add mobile_no___ number not null
				alter table employee add mobile_no____ number check(mobile_no____>10)
				alter table employee add mobile_no_1 number default(10)
				
			2. Using constraint keyword 
				=> NOTE . 1. we can't apply default constraint using constraint keyword 
						  2. we can't apply foreign key constraint using constraint keyword 
				create table employee(empid number)
				alter table employee add mobile_no number constraint pkmb primary key
				alter table employee add mobile_no1 number constraint ukmb unique
				alter table employee add mobile_no11 number constraint nlmb not null
				alter table employee add mobile_no111 number constraint chmb check(mobile_no111>10)
			
			3. Table level constraint 
				=> NOTE . 1. we can't apply default table level constraint 
						  2. we can't apply not null default table level constraint 
				create table employee(empid number)
				alter table employee add(mobile number,mob number,constraint pkmb primary key(mobile,mob))
				alter table employee add(mobile_n number,mob_no number,constraint ukmb unique(mobile_n,mob_no))
				alter table employee add(mobile_no number,mob_no_ number,constraint chmb check(mobile_no=10 OR mob_no_=11))
				alter table employee add(mobi number,mobb number,foreign key(mobi,mobb) references department(dept_id,dept_name))
			
------------------------------------------
Q.. If table is not empty then we want to add new column then which constraint we can apply on column?
==> we can apply all constraint except primary key and not null 
------------------------------------------
Q.. Why primary key and not null is not allowed on new column if the table is not empty?
==> if table contain some data and we try to add new column then new column value bydefault set to null 
	and primary key column and not null column does not allowed null value thats why we can't apply 
	primary key and not null constraint on new column if table contain some data 
------------------------------------------
Q.. Why oracle does not allow NOT NULL constraint at the table level?
==> - not null is column attribute in oracle so not null must be defined at 
	  column level and applies on single column only 
	- NOT NULL does not create row in USER_CONSTRAINTS like other constraints 
	  primary key,foreign key,unique and check 
	- Oracle store NOT NULL constraint reference in 'ALL_TAB_COLUMNS' and 'USER_TAB_COLUMNS' views 
	
	- In 'ALL_TAB_COLUMNS' table 
		Y=> means null values allowed for that column 
		N=> means null values not allowed for that column 
------------------------------------------
Q.. Why oracle does not allow defaut constraint at table level?
==> - default is column attribute in oracle so default must be defined at column level 
	  and applies on single column only 
	- so default does not create row in 'user_constraints' table like other constraints 
	  unique key,foreign key,check,primary key 
------------------------------------------
Q.. create table project(p_id number,p_name varchar(90),duration number).
==> Q.1 Write an SQL query to apply primary key constraint on p_id column?
	==> alter table project add constraint p_id_pk primary key(p_id)
	
	Q.2 Write an sql query to add check constraint on duration column 
		duration should be less than 60 days?
	==> Alter table project add constraint duration_ck check(duration<60);
	
	Q.3 Write an sql query to add foreign key constraint on dept_id column 
	==> first we need to add dept_id column 
		alter table project add dept_id number 
		
		apply foreign key on dept_id 
		alter table project add constraint dept_id_fk foreign key (dept_id) references department(dept_id) 
		on delete cascade 
------------------------------------------
Q.. Consider this table and solve below questions 
	Employee(empno,empaname,duration,dept_id);
	
	Q.1 Composite primary key on empname and empno 
	==> alter table Employee add (constraint empname_empno_pk primary key(empname,empno));
	Q.2 composite unique key on empname and duration 
	==> alter table Employee add constraint empname_duration_uk unique(empname,duration)
	Q.3 Composite check constraint on duration and dept_id 
	==> alter table Employee add constraint duration_dept_id check(duration>to_date('11-JUN-2000','dd-mon-yyyy') and dept_id>10)
------------------------------------------
Q.. If table is non-empty then which of the following constraint we can add using 'add' option?
==> 1. primary key 
	2. foreign key
	3. unique key 
	4. not null 
	5. default 
	6. check 
	
	we can add all constraint if table columns satisfy constraint condition
------------------------------------------
Q.. if table is non empty then can we add primary key constraint on existing column?
==> if column does not contain duplicate and null values then we happily we can add primary key constraint 
	if column contain duplicate or null values then we get an error.
------------------------------------------
Q.. If table is non empty can we add unique key constraint on existing column?
==> If table is non empty and column does not contain duplicate values then we can add unique constraint 
	if table constain duplicate values then we can't add unique key constraint 
------------------------------------------
Q.. If table is non empty can we add foreign key on existing column?
==> If table is non empty and we need to add foreign key on existing column 
	then that column must have reference value with parent column then we happily add 
	foreign key on exsiting column otherwise we will get an error 
------------------------------------------
Q.. If table is non empty can we add check constraint on existing column?
==> If table is non empty and column satisfied check constraint condition then we can add constraint 
------------------------------------------
Q.. What is difference between column level constraint and table level constraint?
==> - Column level constraint defined at the time of column defination where as 
	  In Table level constraint column defination and constraint defination is seperate.
	- column level constraint can be applied with or without constraint keyword where as 
	  Table level constraint can be applied only with constraint keyword 
	- column level constraint applicable for single column where as 
	  table level constraint is applcable for multiple column 
------------------------------------------
Q.. What is the use of drop option in Alter statement?
==> with the help of drop option we can 
	1. drop constraint
	2. drop single column or multiple column	
------------------------------------------
Q.. Alter table syntax to drop column or columns?
==> 1. To drop single column syntax 
	=> alter table table_name drop column column_name 
	
	2. To drop multiple column syntax 
	=> alter table table_name drop(column1,column2,...N);
------------------------------------------
Q.. Can we drop all column of table?
==> No,we can't drop all column of table,table must have atleast one column.
	if we try to drop all column of table then we will get an error 
------------------------------------------
Q.. can we drop primary key or unique key column which is refered in child table as foreign key?
==> No we can't drop primary key or unique key which is refered in child table as foreign key.
------------------------------------------
Q.. How do you drop primary key or unique key column which is refered in child table as foreign key?
==> If we want to drop primary key or unique key which is refered in child table as foreign key 
	then we need to 
		1. drop foreign key constraint or foreign key column from child table 
		2. drop primary key column 
------------------------------------------
Q.. without drop child column or constraint can we drop parent table primary key column?
==> No there is no any possible way 
	But we can forecefully drop primary key column or unique key column 
	Syntax: 
		alter table table_name drop column column_name cascade constraint 
------------------------------------------
Q.. can we drop primary key or unique key column by disableing foreign key constraint?
==> No we can't drop primary key or unique key column by disableing foreign key constraint.
------------------------------------------
Q.. How to drop constraint using alter table syntax?
==> syntax:- 
		alter table employee drop constraint constraint_name 
		
	using drop option we can drop single constraint at a time.
	if we try to delete multiple constraint then we will get an error 
------------------------------------------
Q.. What is difference between drop option and drop statement?
==> with the help drop option we can drop only constraint and column where as 
	with the help of drop statement we can drop database,table,view,sequence,index
------------------------------------------
Q.. Alter table statement with rename option?
==> with the help of rename option we can rename following things 
		- rename table 
		- rename column 
		- rename constraint 
------------------------------------------
Q.. Syntax to rename table?
==> alter table old_table_name rename to new_table_name
------------------------------------------
Q.. syntax to rename column?
==> alter table table_name rename column old_column_name to new_column_name 
------------------------------------------
Q.. Syntax to rename constraint?
==> alter table table_name rename constraint old_constraint_name to new_constraint_name 
------------------------------------------
Q.. Can we change parent table name if it is refered in another table?
==> yes we can change parent table name.oracle engine automatically update foreign key reference in child table 
------------------------------------------
Q.. Can we change parent table primary key or unique column if it is refered in child table?
==> yes we can change primary key column.oracle engine automatically update foreign key reference 
	in child table 
------------------------------------------
Q.. can we change parent table primary key constraint name if it is reflected in child table?
==> yes we can change constraint name if it is refered in child table.oracle engine 
	automatically update foreign key reference 
------------------------------------------
Q.. can we disable primary key constraint if it is refered in child table?
==> No we can't disable primary key constraint if it is refered in child table 
	we are getting an error
------------------------------------------
Q.. How do you disable parent table primary key constraint which is refered in child table?
==> first we need to disable foreign key constraint then we need to disable primary key constraint 
------------------------------------------
Q.. In parent child relationship can we enable foreign key if primary key disabled?
==> No if primary key is disabled then we can't enable foreign key constraint 
	if primary key constraint is enbled then we can enable foreign key constraint 
------------------------------------------
Q.. Which of the following constraint we can enable or disable?
==> 1. primary key 
	2. foreign key 
	3. check 
	4. unique 
	5. not null 
	
	we can't enable or disable default key constraint 
------------------------------------------
Q.. If table is empty then which of the following constraint we can enable or disable?
==> 1. primary key 
	2. foreign key 
	3. check 
	4. unique 
	5. not null 
	
	we can't enable or disable default key constraint
------------------------------------------
Q.. If table is non-empty then which of the following constraint can we enble?
==> 1. primary key 
	2. foreign key 
	3. check 
	4. unique 
	5. not null 
	
	except default we can enble all constraint if column satisfy constraint condition.
------------------------------------------
Q.. Alter table statement with MODIFY option?
==> With the help of modify option we can perform below operation on table 
	1. we can add not null constraint on column 
	2. we can add default constraint on column 
	3. we can change data type of column 
	4. we can change size of column 
------------------------------------------
Q.. How to add not null constraint on column?
==> Syntax:
		Alter table table_name modify (column_name not null);
		Alter table table_name modify (column_name constraint name_of_constraint not null)
------------------------------------------
Q.. How to add default constraint on column?
==> Syntax:
		Alter table table_name modify (column_name default(value))
------------------------------------------
Q.. Why we can't define table level not null constraint?
==> we can't define table level not null constraint because not null constraint is column level 
	property not a table level logical rule 
------------------------------------------
Q.. Why we can't define composit not null constraint?
==> we can't define composit not null constraint because not null constraint is column level 
	property not a table level logical rule 
------------------------------------------
Q.. If we want to add not null constraint on multiple column then what is alternative rule?
==> we can achive this condition using check constraint 
	=>	constraint name_of_constraint check(clm1_name is not null,clm2_name is not null);
		
	=>alter table table_name add constraint name_of_constraint check(clm1_name is not null,clm2_name is not null)
------------------------------------------
Q.. How to add default constraint on column?
==> alter table table_name modify(column1_name default(value),column2_name default(value));
------------------------------------------
Q.. How to drop default constraint?
==> alter table table_name modify column_name default(null);
------------------------------------------
Q.. Why we can't apply table level default constraint?
==> we can't apply table level default constraint because default constraint is column level property
	not a table level logical rule 
------------------------------------------
Q.. Why composite default constraint is not allowed?
==> composite default constraint is not allowed because default constraint is column level property
	not a table level logical rule 
------------------------------------------
Q.. How to apply composite default constraint?
==> To apply composite default constraint we need to use trigger 
------------------------------------------
Q.. How to change data type of column?
==> alter table table_name modify column_name data_type 
------------------------------------------
Q.. Write sql query to change data type of empno from number to varchar?
==> alter table table_name modify empno varchar(90)
------------------------------------------
Q.. Can we change data type if column has some data?
==> No we can't change data type if column contain data 
------------------------------------------
Q.. Which of the following are valid constraint in oracle?
	1. Primary key 
	2. Unique key 
	3. foreign key 
	4. check 
	5. not null 
	6. default 
==> All of the above 	
------------------------------------------
Q.. Which of the following constraints are column level constraint?
	1. Primary key 
	2. Unique key 
	3. foreign key 
	4. check 
	5. not null 
	6. default 
==> All constraint are column level 
------------------------------------------
Q.. Which of the following constraint are table level constraint?
	1. Primary key 
	2. Unique key 
	3. foreign key 
	4. check 
	5. not null 
	6. default 
==> Except default and not null all other constraints are table level 	
------------------------------------------
Q.. Which of the following constraits can be applied at the column level without constraint keyword?
	1. Primary key 
	2. Unique key 
	3. foreign key 
	4. check 
	5. not null 
	6. default
==> all constraints are allowed 	
------------------------------------------
Q.. Which of the following constraints can be applied at the column level with constraint keyword?
	1. Primary key 
	2. Unique key 
	3. foreign key 
	4. check 
	5. not null 
	6. default
==> Except default we can apply all other constraints 
------------------------------------------
Q.. For which of the following constraints we can give user defined name?
	1. Primary key 
	2. Unique key 
	3. foreign key 
	4. check 
	5. not null 
	6. default
==> except default we can apply name for all other constraint 
------------------------------------------
Q.. For which of the following constraints we get system generated name 
	if we are not providing?
	1. Primary key 
	2. Unique key 
	3. foreign key 
	4. check 
	5. not null 
	6. default
==> except default for all other constraint we get system generated name 
------------------------------------------
Q.. Which of the following constraints are composite constraints?
	1. Primary key 
	2. Unique key 
	3. foreign key 
	4. check 
	5. not null 
	6. default
==> except not null and default all others are composite constraints 
------------------------------------------
Q.. Which of the folowing constraints can't be enabled or disabled 
	by using 'alter table table_name enable|disable constraint constraint_name' syntax?
	1. Primary key 
	2. Unique key 
	3. foreign key 
	4. check 
	5. not null 
	6. default
==>	Except default all other constrains can enabled or disabled.
------------------------------------------
Q.. Which of the following constraints can be dropped using
	'alter table table_name drop constraint constraint_name' syntax?
	1. Primary key 
	2. Unique key 
	3. foreign key 
	4. check 
	5. not null 
	6. default
==> except default all other constraints can be droped using syntax
------------------------------------------
Q.. How will you disable default constraint?
==> To disable default constraint syntax is 
	alter table table_name modify clm_name default null;
------------------------------------------
Q.. How to enabled default constraint?
==> To enable default constraint syntax is 
	alter table table_name modify clm_name default value;
------------------------------------------
Q.. How will you drop default constraint?
==> To drop default constraint use below syntax 
	alter table table_name modify clm_name default null;
------------------------------------------
Q.. Which of the following constraints can be added with ADD option of 
	Alter table statement?	
	1. Primary key 
	2. Unique key 
	3. foreign key 
	4. check 
	5. not null 
	6. default
==> except default and not null we can add all other constraints 	
------------------------------------------
Q.. Which of the following constraints can be added with modify option of 
	alter table statement?
	1. Primary key 
	2. Unique key 
	3. foreign key 
	4. check 
	5. not null 
	6. default
==> only not null and default 	
------------------------------------------
Q.. What is sequence?
==> sequence is database object 
	used to generate unique integer number.
	Syntx:
		create sequence sequence_name 
		start with N
		increment by N
		maxValue|minValue 
		cycle|NoCycle 
		cache|NoCache 
		Order|NoOrder
	
	here all parameter are optional.
------------------------------------------
Q.. What is default behaviour of sequence?
==> - if we don't specify start with then default value is 1 
	- if we don't specify increment by then default value is 1
	- if we don't specify min value then
		1. for ascending sequence min value is 1 
		2. for descending sequnce min value is "10 rest to 27 -1"
	- if we don't specify max value then 
		1. for ascending sequence max value is "10 rest to 27 -1"
		2. for descending sequence max value is 1 
	- if we don't specify cycle|NoCycle then default value is NoCycle
	- if we don't specify cache|NoCache then default value is cache 
	- if we don't specify order|NoOrder then default value is NoOrder
------------------------------------------
Q.. How to cross check sequence value?
==> To check sequence value we have one view named as "user_sequences"
	query is like 
		select * from user_sequences where sequence_name="sequence_name"
------------------------------------------
Q.. About sequence?
==> - if we specify min value 10 then default start with value is 10 if we try to start with 9 then 
	  we will get an error like 
		create sequence sequence_name
		start with 9
		minValue 10 
	
	- if we don't specify min value then
		1. for ascending sequence min value is 1 
		2. for descending sequnce min value is "10 rest to 27 -1"
		
	- if we don't specify max value then  
		1. for ascending sequence max value is "10 rest to 27 -1"
		2. for descending sequence max value is 1 
	
	- if we don't specify cycle|NoCycle then bydefault NoCycle is enabled.
		if we specify cycle option then we need to specify upper limit 
		1. for ascending sequence we need to specify MAXVALUE
		2. for descending sequence we need to specify MINVALUE 
------------------------------------------
Q.. What is the use of cycle option in sequence?
==> - cycle option is used to restart sequence automatically when it reaches to its upper limit 
		if sequence reches to it's upper limit then it restart from it lower value 
		it don't start with start with parameter.start with parameter use only one time throughout sequence life 
	- When we specify cycle option for ascending then
		1. bydefault lower limit is 1 but we need to specify upper limit
		2. lower limit is min value 
		3. upper limit is max value 
	- When we specify cycle option for descending then 
		1. we need to specify lower limit and upper limit 
		2. lower limit is maxvalue 
		3. upper limit is minvalue 
------------------------------------------
Q.. What is use of NoCycle option in sequence?
==> - NoCycle option don't restart sequence when it reches to it's upper limit value 
------------------------------------------
Q.. What is cache|NoCache option in sequence?
==> - if we don't specify cache|NoCache option then bydefault cache is enabled and it's value is 20.
	- cache means how many sequence number create by oracle in advance and keep it into memory
	- we can explicitly specify cache value.cache value should not be zero or negative.
	- if we need to specify cache then it value is greater then or equal to 2.we can specify value 1
	  but 1 is not recommended to use 
------------------------------------------
Q.. what is NoCache option in sequence?
==> NoCache means oracle does not create number in advance it get created when required 
------------------------------------------
Q.. What is Order|NoOrder parameter in sequence?
==> - if we don't specify order|NoOrder then bydefault NoOrder is enabled.
	- use of Order parameter is ensure that sequence number are generated in the exact order
	  in which they are requested.
	- if multiple sessions are involved then use Order parameter.
	- NoOrder parameter don't ensure sequence numbers 
------------------------------------------
Q.. How to view sequence meta data?
==> To view sequence metadata some tables are there 
	1. user_sequences ==> accesible for all users 
	2. dba_sequences ==> accesible for DBA person
	3. all_sequences ==> accesible for all users
------------------------------------------
Q.. How to access sequence?
==> to access sequence oracle provide 2 keywords (pseudo columns)
	1. currval => which represent sequence current value 
	2. nextval => which represent sequence next value 
	
	sequence_name.currVal 
	sequence_name.nextval
------------------------------------------
Q.. How to use sequence in insert statement?
==> To use sequence in insert statement oracle provide 2 keyword 
	1. currentVal => represent current value of sequence
	2. nextVal => represent next value of sequence 
	
	To use in insert statement syntax is 
	
	insert into table_name(clm1_name,clm2_name...N) values(sequence_name.nextval,clm2_value...N);
------------------------------------------
Q.. How to alter sequence?
==> - To alter sequence syntax is 
		alter sequence sequence_name
		start with N 
		increment by N 
		cycle|NoCycle
		maxValue|minValue
		cache|NoCache
		order|NoOrder
	- we can't alter start value of sequence
	- we can't alter min value if sequence number is less than min value 
	- we can't alter max value if sequence number is greater then max value 
------------------------------------------
Q.. How to drop sequence?
==> - To drop sequence we have syntax is 
		drop sequence sequence_name
------------------------------------------
Q.. Why sequence? What is advantages of sequence?
==> - sequence generate unique interger automatically
	  No need to check manually or calculate next value 
	
	- sequence is independant 
	  sequence is not tied to any table directly so we can reuse across multiple tables 
	
	- support multi user environment 
	  Two user not get same value even if they accessing sequence at same time 
	
	- safe against rollback
	  Ones value is retrived via nextval it won't be resued even if transaction is rolled back or fail 
	
	- flexible configuration 
	  we can alter the sequence after creation
------------------------------------------
Q.. What are the limitation of sequence?
==> - it generate only integer value.
	  we can't generate character type values like A,b,c directly
	  we can't generate float type values like 0.2,0.3,6.5 directly
	  we can't generate alpha numeric values like emp11,emp30 directly
	- sequence is gap friendly,not gap free.Gap may occurs.
		if we insert some statement in table using sequence and we rollback it then 
		sequence value is not rollback.there is gap in sequence values 
	- we can access only one value at a time using nextval.
	- we can't change start with value of sequence onces it created 
	- we can't rollback sequence
------------------------------------------
Q.. can sequence generate duplicate values?
==> if sequence is properly defined then it can't generate duplicate values 
	but we can generate duplicate values using cycle parameter and using alter the sequence
------------------------------------------
Q.. can we rollback sequence values?
==> No we can't rollback sequence values.
------------------------------------------
Q.. What is the use of sequence?
	a) store large text data 
	b) automatically generate unique numeric values 
	c) manage user sessions 
	d) encrept data 
==> b) automatically generate unique numeric values 
------------------------------------------
Q.. Which of the following is not valid keyword in sequence creation?
	a) start with 
	b) increment by 
	c) auto_increment
	d) maxvalue
==> c) auto_increment
------------------------------------------
Q.. What does the CYCLE option do in a sequence?
	A) Deletes sequence values
	B) Causes the sequence to restart after reaching MAXVALUE
	C) Pauses the sequence
	D) Doubles the increment value
==> B) Causes the sequence to restart after reaching MAXVALUE
------------------------------------------
Q.. What is the default caching behavior in Oracle sequences?
	A) NOCACHE
	B) CACHE 1
	C) CACHE 20
	D) CACHE 10
==> C) CACHE 20
------------------------------------------
Q.. What will happen if a sequence with NOCYCLE reaches its MAXVALUE?
	A) It restarts from MINVALUE
	B) It throws an error
	C) It deletes old values
	D) It continues with negative values
==> B) It throws an error
------------------------------------------
Q.. Which pseudo column is used to get the next value from a sequence?
	A) NEWVAL
	B) NEXTID
	C) NEXTVAL
	D) INCREMENT
==> C) NEXTVAL	
------------------------------------------
Q.. Can Oracle sequences generate alphabetic values like A, B, C...?
	A) Yes, directly
	B) Only with ALPHAVAL keyword
	C) No, only numeric values are supported
	D) Only using TO_CHAR function
==> C) No, only numeric values are supported.
------------------------------------------
Q.. Which statement retrieves the current value of a sequence?
	A) SELECT CURRVAL FROM dual;
	B) SELECT sequence_name.CURRVAL FROM dual;
	C) SELECT LASTVAL FROM dual;
	D) SELECT VALUE FROM sequence;
==> B) select sequence_name.currentVal from dual;
------------------------------------------
Q.. What is the effect of NOCACHE on a sequence?
	A) Prevents gaps between values
	B) Increases performance
	C) Disables the sequence
	D) Decreases performance (slightly)
==> D) Decreases performance (slightly)
------------------------------------------
Q.. Which command is used to remove a sequence?
	A) DELETE SEQUENCE sequence_name;
	B) DROP SEQUENCE sequence_name;
	C) REMOVE SEQUENCE sequence_name;
	D) TRUNCATE SEQUENCE sequence_name;
==> B) drop sequence sequence_name	
------------------------------------------
Q.. Which of the following statements is TRUE about CURRVAL?
	A) CURRVAL can be selected before NEXTVAL is used
	B) CURRVAL returns the last value generated by any sequence
	C) CURRVAL returns the last value generated by your session for a specific sequence
	D) CURRVAL resets the sequence to its starting value
==> C) CURRVAL returns the last value generated by your session for a specific sequence	
------------------------------------------
Q.. CREATE SEQUENCE test_seq START WITH 100 INCREMENT BY -10 MINVALUE 0 MAXVALUE 100 CYCLE;
	What will be the third value generated?
==> 80
------------------------------------------
Q.. Which clause in sequence creation affects the performance during high-volume inserts?
	A) CYCLE
	B) NOCYCLE
	C) CACHE
	D) MAXVALUE
==> C) CACHE
------------------------------------------
Q.. What happens if a session uses NEXTVAL, but is terminated before commit?
	A) Sequence rolls back
	B) Value is not consumed
	C) Value is lost and may cause a gap
	D) Sequence is dropped
==> C) Value is lost and may cause a gap
------------------------------------------
Q.. How can you restart a sequence from a new number?
	A) ALTER SEQUENCE … RESTART WITH
	B) Use DBMS_SEQ.RESTART
	C) DROP and RE-CREATE the sequence
	D) RENAME sequence and CREATE a new one
==> C) DROP and RE-CREATE the sequence
------------------------------------------
Q.. How will you generate character type values like A,B,C,D.. through sequence?
==> we can use 'CHR' function this function will return corrosponding character by using ascii code 
	for e.g 
		select CHR(sequence_name.currval) from dual;
------------------------------------------
Q.. How will you generate float type values like 1.0,1.1.1.2.. through sequence?
==>	we can generate float type number by using below query 
	syntax 
		select sequence_name.nextval/10 from dual 
------------------------------------------
Q.. How will you generate alphanumeric values like EMP-100,EMP-101 through sequence?
==> we can use concat function this function join two values 
	for e.g 
		select concat('EMP-',sequence_name.currentVal) from dual 
------------------------------------------
Q.. What is Index?
==> Index is database object.
	Index is used to speed up data retrival operation 
	
	Syntax: 
		create index Index_name ON Table_name (clm1_name,clm2_name....N);
		
	Once Index created it meta data stored in 3 different views 
		1. DBA_INDEX 
		2. ALL_INDEXES 
		3. USER_INDEXES 
------------------------------------------
Q.. What are different type of Index?
==> 1. B-tree index 
	2. Bitmap index 
	3. unique vs non-unique index 
	4. composit index 
	5. function based index 
	6. reverse key index 
	7. domain index 
	8. invisible index 
	9. global and local partitioned index  
	10. index organized table 
------------------------------------------
Q.. What is B-tree Index?
==> B-tree Index stand for Balanced tree Index.
	it is most commonly used index type.it is default index 
	if don't specify index type then bydefault B-tree index is created.
	when we define PRIMARY key constraint or UNIQUE key constraint oracle automatically
	create unique B-tree index on specified column.
	
	Syntax: 
		create index index_name ON table_name(clm1_name,clm2_name...N);
------------------------------------------
Q.. When we should go with B tree index?
==> if column have many unique values then we should go with B tree index.	
------------------------------------------
Q.. What is Rowid?
==> Rowid is unique identifier that represent physical location of row. 
	Rowid is Base 64 encoded string 
	Every row has Rowid and Rowid is created when we insert data into table 
	Rowid is not created due to index but index use Rowid for searching data 
------------------------------------------
Q.. What is Bitmap index?
==> - Bitmap is special type of index which uses bits(0s and 1s) to represent 
	  presence or absence 
	- It store bitmap for each distinct value in a row 
	- 1 represent present 0 represent absent 
	- Syntax
		create BITMAP index index_name ON Table_name(clm1_name,clm2_name....N);
------------------------------------------
Q.. When we should go with Bitmap index?
==> if column has few distinct values then we should go with Bitmap index.
------------------------------------------
Q.. Unique index?
==> - Unique index is sub type of b-tree index 
	- when we define primary key or unique key on column then internally 
	  oracle engine creates unique b-tree index 
	- if we want to create unique b-tree index manully then syntax is 
		create unique index index_name on table_name (clm1_name,clm2_name...N);
	- unique index column does not allow duplicate values so if column contain 
	  duplicate values then then we can't define unique index on that column.
	  By mistake if try to define unique index on that column then we will get an error 
	- if column is unique index column then we can't insert duplicate values in column 
	  if we try to insert duplicate values then we will get an error.
------------------------------------------
Q.. Non-Unique index?
==> - Non-Unique index is sub type of b-tree index.
	- when we create b-tree index by default it is Non-Unique index.
	- there is no any special syntax to create Non-Unique index. 
------------------------------------------
Q.. Composite index?
==> - index created on two or more column then that index consider as composite index. 
	- composit index can be b-tree,unique,bitmap index. 
------------------------------------------
Q.. function based index?
==> - In the index defination if we are using single row function then it consider function 
	  based index. 
	- syntax: 
		create index index_name ON Table_name(function_name(clm1_name));
    - for e.g 
		create index index_name ON Table_name(upper(empanme))
------------------------------------------
Q.. Reversed key index?
==> - In revered key index column value will be reversed before storing.
	- syntax to create reversed index 
		create index index_name ON Table_name(clm1_name,clm2_name...N) reverse
------------------------------------------
Q.. Invisible index?
==> - invisible index introduced in oracle 11G(Grid).
	- bydefault index is visible.
	- Invisible index is index that exist in database but ingnored by optimizer during query execution.
	- Syntax to Invisible index.
		=> alter index index_name INVISIBLE;
------------------------------------------
Q.. Syntax to make index invisible?
==> Alter index index_name invisible;
------------------------------------------
Q.. What is the purpose to make index INVISIBLE?
==> 1. test the effect of removing an index without actually dropping it 
	2. Temporary disable an index without affecting DML integrity.
------------------------------------------
Q.. Syntax to make visible index?
==> Alter index index_name visible;
------------------------------------------
Q.. What is Normalization?
==> Breaking the larger table into smaller ones is nothing and linking them using relationship
	is nothing but normalization.
------------------------------------------
Q.. Why we use Normalization?
==> To reduce data redundancy(data duplicate)
	To ensure data integrity(validness and correctness of data)
	To ensure data consistence(before updation and after updation data should in valid state)
	Easy to maintain.
------------------------------------------
Q.. What are different types(forms) of normalization?
==> 1. First Normal Form(1NF)
	2. Second Normal Form (2NF)
	3. Third Normal Form (3NF)
	4. BCNF(Boyce Codd Normal Form)
	
------------------------------------------
Q.. Rule for First Normal Form.
==> Each table cell must have atomic value(automic means single value)
	Each record should be unique 
	
	i.e First normal form removes multi-valued attributes and removes duplicate rows 
------------------------------------------
Q.. Rule for Second Normal Form. (foreign key)
==> Table must be in First Normal Form.
	No partial dependancy
	(Partial dependancy means non key columns are depends on part of composite key.
	 In second normal form we have to remove partial dependancy.
	 No partial dependancy means non key attributes fully depends on whole key)
------------------------------------------
Q.. Rule of Third Noramal Form.(many to many foreign key)
==> Table must be in Second Normal Form.
	No Transitive Dependancy.
	
	Transitive dependancy means A is depends on B and B is depends on C
	Non-key columns depends on another non-key columns 
	In third normal form we have to remove this transitive dependancy
------------------------------------------
Q.. What is mean by super key?
==> Any set of columns which uniquely identify the records.
	one table can have multiple super keys 
	for e.g mail id,mobile number etc 
------------------------------------------
Q.. What is candidate key?
==> minimal set of columns which uniquely identify the records 
	super key contains extra columns but candidate key does not contain extra columns 
	One table can have multiple candidate key one of them become primary key 
	
	
	Note: super key and candidate key are not constraints or keyword in SQL 
		  super key and candidate key are the therotical concept used on database design and normalization
------------------------------------------
Q.. Rule for BCNF?
==> BCNF is stricter version than 3NF or BCNF is advanced version of 3NF.
	after third normal form if some anomalies exist then apply BCNF.
	1. Table must be in 3NF 
	2. Every deterrminant is super key 
	Any column or set of column which uniquely identify the record is called deterrminant.
------------------------------------------
Q.. What is difference between 3NF and BCNF?
==> IN 3NF all non key columns fully depends on key column 
	IN BCNF The column which uniquely identify record must it key itself.
------------------------------------------
Q.. What is the main purpose of normalization?
	A. To increase data redundancy
	B. To remove data anomalies and redundancy
	C. To improve indexing
	D. To reduce the number of tables
==> B. To remove data anomalies and redundancy
------------------------------------------
Q.. Which of the following is not a type of data anomaly?
	A. Insertion anomaly
	B. Deletion anomaly
	C. Modification anomaly
	D. Execution anomaly
==> D. Execution anomaly
------------------------------------------
Q.. A table is in First Normal Form (1NF) if:
	A. All non-key attributes depend on the primary key
	B. It contains atomic (indivisible) values
	C. It has no transitive dependencies
	D. It has a composite key
==> B. It contains atomic (indivisible) values
------------------------------------------
Q.. Which normal form removes partial dependencies?
	A. 1NF
	B. 2NF
	C. 3NF
	D. BCNF
==> B. 2NF
------------------------------------------
Q.. A table in 2NF may still have which kind of dependency?
	A. Composite dependency
	B. Functional dependency
	C. Transitive dependency
	D. Partial dependency
==> C. Transitive dependency
------------------------------------------
Q.. A table is in Third Normal Form (3NF) when:
	A. It is in 2NF and has no partial dependencies
	B. It is in 2NF and every non-key attribute is non-transitively dependent on the primary key
	C. It is in 1NF and has only one candidate key
	D. It has no NULL values
==> B. It is in 2NF and every non-key attribute is non-transitively dependent on the primary key
----------------------------------------------	
Q.. Which normal form addresses issues caused by overlapping candidate keys?
	A. 2NF
	B. 3NF
	C. BCNF
	D. 4NF
==> C. BCNF	
----------------------------------------------
Q.. Which of the following is a violation of BCNF?
	A. A non-prime attribute depends on another non-prime attribute
	B. A candidate key determines another column
	C. A non-super key determines another column
	D. A table has multiple candidate keys	
==> C. A non-super key determines another column
----------------------------------------------
Q.. What is a transitive dependency?
	A. When an attribute is dependent on part of the primary key
	B. When a non-key attribute depends on another non-key attribute
	C. When an attribute is dependent on a foreign key
	D. When an attribute is dependent on a composite key	
==> B. When a non-key attribute depends on another non-key attribute
----------------------------------------------	
Q.. Which normal form eliminates multi-valued attributes?
	A. 2NF
	B. 3NF
	C. BCNF
	D. 1NF
==> D. 1NF
----------------------------------------------
Q.. What is JOIN in sql?
==> fetching data from two or more table based on related column is nothing but join 	
----------------------------------------------	
Q.. What is the use of join?
==> To fetch data from two or more table.
----------------------------------------------	
Q.. What are different type of joins?
==> there are near 10 types of joins and all joins are classified into two categories 
	1. Based on syntax or relationship 
	2. Based on condition type
	
	1. Based on syntax of relationship 
		- inner join 
		- left outer join 
		- right outer join 
		- full outer join 
		- self join 
		- cross join 
		- natural join 
		- using clause join 
		
	2. Classification based on codition type 
		- Equi join 
		- Non Equi join 
----------------------------------------------
Q.. What is inner join 
			In inner join it fetch common data from both the table 
----------------------------------------------			
Q.. What is left outer join 
			- In left outer join it fetch all data from left side table
			  and only common data from right side table 
			- If we want all data from left table and 
			  only common data from right table then we go with left outer join 
----------------------------------------------
Q.. Which join type can be used to find rows present in one table but not in another?
==> Left outer join with IS NULL /Right outer join with IS NULL 

	SELECT a.*
	FROM table_a a
	LEFT JOIN table_b b ON a.id = b.id
	WHERE b.id IS NULL;
	
	The LEFT JOIN keeps all rows from table_a, even if there's no match in table_b.
	The WHERE b.id IS NULL filters for rows where no match was found in table_b.
	
	SELECT a.*
	FROM table_a a
	RIGHT JOIN table_b b ON a.id = b.id
	WHERE a.id IS NULL;	
----------------------------------------------

Q.. What is right outer join 
			- In right outer join it fetch all data from right side table 
			  and only common data from left side table
			- if we want all data from right table and 
			  only common data from left table then we go with right outer join  
----------------------------------------------			
Q.. What is full outer join 
			- In full outer join it fetch non matching and matching data from both tables  
			- if we want all data from both table then we go with full outer join 
			- non-matching rows from left table returns null 
			- non-matching rows from right table returns null 
----------------------------------------------			
Q.. What is self join ?
			- A table joined itself is nothing but self join.
			- self join is not keyword like inner join,left outer join,right outer join
			- in self join we using aliasing to differentiate table 
			- self join can be 
				- inner join 
				- left join 
				- right join 
				- full outer join 
----------------------------------------------
Q.. Can we generate Right outer join result using left outer join?
==> Yes,by interchanging position of table.	
----------------------------------------------
Q.. Can we generate left outer join result using right outer join?
==> yes, by interchanging position of table 	
----------------------------------------------	
Q.. Suppose I have two tables Department and Employee, 
	Department table has 5 rows and Employee table has 10 rows, 
	each department has exactly 2 employees, 
	4 Employees from Employee table are not working in any department then

1. If we apply Inner Join then in the result how many rows get selected?
=> 6

2. If we apply Left Outer Join then in the result how many rows get selected?
   (Consider Department as Left table)
=> 8

3. If we apply Right Outer Join then in the result how many rows get selected?
   (Right table is Employee)
=> 10

4. If we apply Full Outer Join then in the result how many rows get selected?
=> 12

----------------------------------------------	
Q.. What is natural join 
==> - it is type of join that automatically joins two or more tables based on same column 
	- oracle engine automatically detect same column name and compare.
	- In normal join (inner,left,right,full) we use ON clause but 
	  In natural join we don't use ON clause compare column
	- syntax: 
		select column_list from table_1 natual join table2 
	- In real time/production we avoid to use natural join 
		=> Why 
			1. No control 
				- we can't tell column to database to fetch data 
				- database decide itself column 
				
			2. Hard to debugg 
				- if something going wrong then it is hard to difficult which column caused problem 
			
			3. Not easy to understand 
				- when someone read natural join they don't know which column used.
			
			4. Wrong data or missing data
				- natural join will join on all columns with same name 
----------------------------------------------	
Q.. What is Cross join?
==> - cross join is also called cartesian product.
	- In cross join each row from first table is combined with each row from second table 
	- if first table contains n rows and second table contains m rows then in result we will get total m*n rows 
	- syntax for cross join  
		select column_list from table_1 cross join table_2
	- syntax for cartesian product
		select column_list from table_1,table_";
	- we use cross join or cartesian product for 
		1. To generate possible combination 
		2. To generate test data
----------------------------------------------	
Q.. What is difference between cross join cartesian product?
==> - Functionality wise cross join and cartesian product are same but syntax wise there is difference 
	- In cross join we seperate table using cross join keyword but In cartesian production we seperate 
	  table using comma.
	- syntax for cross join 
		select clm_list from table_1 cross join table_2 
	- syntax for cartesian production 
		select clm_list from table_1,table_2 
----------------------------------------------	
Q.. What is USING clause join?
==> - if we are joining two table where both tables column name are same then instead of using 
	  ON clause we use USING clause.
	- USING clause is used with different types join like inner,left,right,full outer join.
	- Noraml syntax 
		select column_list from table_1 inner join table_2 on table_1.clmName=table_2.clmName
	- USING clause 
		select column_list from table_2 inner join table_2 using(clmName)	
----------------------------------------------	
Q.. What is Equi join?
==> - Equi join is type of join that combine two or more row based on equal to operator 
	- Equi join used equal to operator (=)
	- Equi join can be 
		1. inner join 
		2. left join 
		3. right join 
		4. full outer join 
	- Equi join is conceptual,technically it is part of INNER JOIN or OUTER JOIN. 
	
----------------------------------------------	
Q.. What is Non-Equi join?
==> In Equi join we use equal to operator to compare the rows 
	if we are using other operator like <,>,BETWEEN,LIKE then it become equi join 
----------------------------------------------	
Q.. null column  behavior in joins?
==> - in inner join null column will be ignored.
	- in left outer join null column from left table only will be display 
	- in right outer join null column from right table only will be display 
	- in full outer join both table null values will be display 
----------------------------------------------	
1. Which of the following best describes an INNER JOIN?
A) Returns all rows from both tables, matching or not
B) Returns only rows where there is a match in both tables
C) Returns all rows from the left table, plus matches from the right
D) Returns all rows from the right table, plus matches from the left
-> B) Returns only rows where there is a match in both tables

----------------------------------------------

2. Which JOIN type will return all rows from the left table, even if there are no matches in the right table
A) INNER JOIN
B) FULL OUTER JOIN
C) RIGHT JOIN
D) LEFT JOIN
-> D) LEFT JOIN

----------------------------------------------

3. If table A has 100 rows and table B has 200 rows, a CROSS JOIN will return:
A) 100 rows
B) 200 rows
C) 20,000 rows
D) Depends on join condition
-> C) 20,000 rows

----------------------------------------------

4. Which of these joins may use the USING clause in Oracle?
A) INNER JOIN
B) NATURAL JOIN
C) EQUI JOIN
D) Both A and C
-> D) Both A and C

----------------------------------------------

5. In Oracle, NULL values in the join column will:
A) Always match each other
B) Never match each other in INNER JOIN
C) Always be ignored in LEFT JOIN
D) Cause an error
-> B) Never match each other in INNER JOIN

----------------------------------------------

6. Which join type can be used to find rows present in one table but not in another?
A) CROSS JOIN
B) LEFT JOIN with IS NULL filter
C) INNER JOIN
D) NATURAL JOIN
-> B) LEFT JOIN with IS NULL filter

----------------------------------------------

7. In a SELF JOIN, we must:
A) Use different schemas
B) Use different databases
C) Use table aliases
D) Have different table structures
-> C) Use table aliases

----------------------------------------------

8. Which of the following is true for FULL OUTER JOIN?
A) Returns only matching rows
B) Returns all rows from both tables
C) Returns only unmatched rows
D) Equivalent to INNER JOIN
-> B) Returns all rows from both tables

----------------------------------------------

9. A NON-EQUI JOIN in Oracle is performed using:
A) = operator
B) <, >, BETWEEN, or other inequality operators
C) LIKE operator only
D) No condition at all
-> B) <, >, BETWEEN, or other inequality operators

----------------------------------------------

10. If you forget the join condition in an INNER JOIN, Oracle will:
A) Return no rows
B) Return only NULLs
C) Return a Cartesian product (same as CROSS JOIN)
D) Throw an error
-> C) Return a Cartesian product (same as CROSS JOIN)

----------------------------------------------	
Q.. Which join returns only rows where there is match in both tables?
==> Inner join 
----------------------------------------------	
Q.. In oracle which join keyword is us for retrieving matching rows only?
==> Inner join 
----------------------------------------------	
Q.. Which join type return all rows from left table and the matching rows from right table?
==> Left join 
----------------------------------------------	
Q.. Which join return all rows from right table and the matching rows from the left table?
==> right join 
----------------------------------------------	
Q.. Full outer join returns?
==> all rows from both tables.
----------------------------------------------	
Q.. cross join return?
==> cartesian product of both tables 
----------------------------------------------	
Q.. A natural join in oracle?
==> matches row based on same column with same name and data type 
----------------------------------------------
Q.. In inner join if join column contain null?
==> That row ingonred 
----------------------------------------------	
Q.. In left join if join column contain null in left table?
==> The row is included with null values from right table.
----------------------------------------------
Q.. To find rows present in one table but not in another we can use?
==> Left join + where right column is null
----------------------------------------------	
Q.. What is SET operator?
==> SET operator is used to combine result of two or more select select statement into single.
	- There are 4 tyep of SET operator.
		1. UNION 
		2. UNION ALL 
		3. INTERSECT
		4. MINUS
		
	- In SET operator below points are mandatory
		1. column count 
			- in both select statement column count must be equal 
		2. data type 
			- first column of first select statement must be compatable with 
			  first column of second select statement ...SO ON 
		3. column name 
			- column names for result are always from first select statement.
----------------------------------------------		
Q.. What is UNION?
-> UNION operator return distinct value from two or more select statement 
	Syntax: 
		select statement1 from table_name union select statement2 from table_name;
	
	Note: if there are multiple columns then how uniqueness is decided?
	=> if there are multiple columns then column value are combined and compared 
	   if same combined value is exist then it is considered as duplicate 
	   otherwise it is considered as unique.	
----------------------------------------------
Q.. What is UNION ALL ?
==> It return all row from first select statement and all row from second select statement 
	including duplicates.
	- in UNION ALL sorting is not performed so it is faster then UNION ALL.
----------------------------------------------	
Q.. Write sql query to display every employee 2 times?
==> select * from employee_detais union all select * from employee_details 
----------------------------------------------
Q.. What is INTERSECT?
==> INTERSECT return common data from two select statement.
	- Duplicate value consider only one time.
----------------------------------------------	
Q.. What is difference between INTERSECT and INNER JOIN?
==> INTERSECT work on select statement where as Inner Join work on table level.
	Intersect does not count duplicate where as inner join count duplicate 
----------------------------------------------
Q.. What is MINUS?
==> MINUS is special operator in oracle.it support only in oracle 
	- minus return unique row from first select statement but not present in second select statement. 
----------------------------------------------	
Q.. Order by caluse in SET operator?
==> Syntax: 
		select column_list from table_1 SET OPERATOR select column_list from table_2 order by column_name;
	- order by 1 means first column from first select statement
	- order by 2 means second column from first select statement.
	
----------------------------------------------
Q.. What is difference between SET and JOIN?
==> SET work on select statement while join works on table level 
	- set operator combines result of two or more select statement where as 
	  join combine data of two more table 
	- In set operator condition is not required where as 
	  In join condition is manadatory otherwise it become cross join 
	- In set operator vertical merging but In join horizontal merging 
	- In set operator number of column must be same where In join no any restriction for column 
	- We have set operator like (union,union all,intersect,minus) where as 
	  we have joins like(inner join,left join,right join,full outer join,cross join)
----------------------------------------------	
Q.. Which set operator remove duplicate from result?
==> UNION.
----------------------------------------------
Q.. For using set operators What must be true for all select statement?
==> same column name,data type must be same,column count.
----------------------------------------------	
Q.. Which set operator return common rows from both select statement?
==> INTERSECT
----------------------------------------------
Q.. What happen if you use union all on two quries with 10 matching rows each?
==> 20 rows will display.
----------------------------------------------	
Q.. Which operator return rows from first query that are NOT in second query?
==> MINUS
----------------------------------------------
Q.. Which operator is fast in database?
==> UNION ALL
----------------------------------------------	
Q.. Which set operator not support in Mysql?
==> minus (Mysql use except)
----------------------------------------------	
Q.. What is view?
==> view is virtual table it is view is replica of one or more table.
	- Type of view 
		1. simple view 
		2. complex view 
		3. inline view 
		4. materialized view 
----------------------------------------------
Q.. What is simple view?
==> View created on single table or view created without using DISTINCT,
    HAVING,JOINS,SET OPERATOR OR GROUP BY function is nothing but simple view 
	- in simple view we allows DML operation.
	Syntax: 
		create view view_name as select clm1_name,clm2_name...N from table_name
	- if we insert data into view then same data will insert into the in real table. 
	- if we update data into view then same reflection will update in real table.
	- if we delete data from view then same data will be delete from real table.
	
----------------------------------------------
Q.. Where view data will store?
==> there are 3 tables to store view data.
	1. DBA_VIEWS
		==> Accesible only to DBA person.
		==> It show all meta about view created in database.
		
	2. ALL_VIEWS
		==> Accesible to every one. 
		==> it show meta data of all view which is accessible to you.
		
	3. USER_VIEWS
		==> Accesible to every one.
		==> it show meta data of all view which is created by you.
----------------------------------------------
Q.. What is complex view?
==> view created on multiple tables or view created with distinct,group by,
	having clause,joins,set operator is nothing but complex view.
	- Syntax.
		create view view_name as select clm1_name,clm2_name..N from table_name
	- In complex view DML operations are not allowed.
----------------------------------------------
Q.. What is difference between simple view and complex view?
==> - simple view is defined on single table where as complex view defined on multiple table.
	- simple view does not contain distinct keyword where as
		complex view contain distinct keyword 
	- simple view does not contain group function where as 
		complex view contain group function.
	- simple view does not contain join where as 
		complex view contain join 
	- simple view does not contain set operator where as 
		complex view cotains join 
	- simple view does not contain having clause where as 
		complex view contains having clause 
	- simple view contain dml operation but complex view does not contain DML operation.
----------------------------------------------
Q.. How to create view read only?How to prevent DML opration on simple view?
==> create view view_name as select * from table_name read only.
----------------------------------------------
Q.. What is CHECK option in simple view?
==> CHECK option is optional in simple view 
	it ensure that while doing insert and update operation condition must be satisfied.
	if condition not satisfied then we will get an error.
----------------------------------------------
Q.. What is Inline view?
==> Inline view is subquery in the FORM clause of sql statement.
	- example	
		select empname,empno,doj from (select * from employee);
----------------------------------------------
1. Which of the following is TRUE about a View?
A. A View stores data physically.
B. A View is always up to date with base tables.
C. A View cannot have WHERE clause.
D. A View cannot be created on multiple tables.
==> B. A view is always up to date with base tables.
----------------------------------------------
2.Which of the following is true about a view in Oracle?
A) A view stores data physically like a table
B) A view is always read-only
C) A view is a virtual table based on a query
D) A view cannot be created on joins
==> A view is a virtual table based on a query.
----------------------------------------------
3.Which clause makes a view non-updatable?
A) WITH CHECK OPTION
B) WITH READ ONLY
C) FORCE VIEW
D) NO DML OPTION
==> with read only.
----------------------------------------------
4.Which of the following statements about WITH CHECK OPTION is correct?
A) It prevents all DML on the view
B) It ensures that inserted/updated rows satisfy the view’s WHERE condition
C) It automatically creates a CHECK constraint on the base table
D) It only applies to DELETE operations
==> B) It ensures that inserted/updated rows satisfy the view’s WHERE condition
----------------------------------------------
5. Can you apply WITH CHECK OPTION and WITH READ ONLY together in a view?
A) Yes, but only in Oracle 19c and later
B) Yes, but only on simple views
C) No, they cannot be combined
D) Yes, but only if FORCE VIEW is used
==> C) No, they cannot be combined
----------------------------------------------
6.Which of the following is not true about views?
A) Views can be created on multiple tables using joins
B) Views can have an ORDER BY clause without restrictions
C) A view does not store data, only the query
D) A view can be created with or without a WHERE condition
==> B) Views can have an ORDER BY clause without restrictions
----------------------------------------------
7. Which of the following commands is valid?
A) CREATE OR REPLACE VIEW v1 AS SELECT * FROM emp WITH CHECK OPTION;
B) CREATE VIEW v2 AS SELECT * FROM emp WHERE deptno=10 WITH CHECK OPTION;
C) CREATE VIEW v3 AS SELECT * FROM emp WITH READ ONLY;
D) All of the above
==> D) All of the above
----------------------------------------------
8. What will happen if you try to insert into a view with WITH CHECK OPTION that doesn’t satisfy the WHERE condition?
A) The row will be inserted in base table but hidden from the view
B) The row will be rejected with an error
C) The row will be inserted and condition ignored
D) The row will be inserted with NULL values
==> B) The row will be rejected with an error
----------------------------------------------
9. Which of the following best describes a simple view?
A) A view created on one table without any functions, joins, or group by
B) A view created on multiple tables with joins
C) A view created only with aggregate functions
D) A view that cannot be updated
==> A) A view created on one table without any functions, joins, or group by
----------------------------------------------
10. Which of the following operations are usually allowed on a simple view?
A) SELECT only
B) SELECT, INSERT, UPDATE, DELETE (if no restrictions)
C) SELECT and UPDATE only
D) SELECT and DELETE only
==> B) SELECT, INSERT, UPDATE, DELETE (if no restrictions)
----------------------------------------------
11. Which of the following is NOT allowed in a Simple View?
A. JOIN
B. GROUP BY
C. DISTINCT
D. All of the above
==> All of the above .
----------------------------------------------
12. Which clause ensures that only rows satisfying the view condition can be modified through the view?
A. WITH CHECK OPTION
B. WITH READ ONLY
C. FORCE
D. NO FORCE
=> A. WITH CHECK OPTION.
----------------------------------------------
13. Which clause prevents DML operations on a view?
A. WITH CHECK OPTION
B. WITH READ ONLY
C. NO FORCE
D. None of the above
=> WITH READ ONLY.
----------------------------------------------
14. Which statement is INVALID?
A. CREATE OR REPLACE VIEW
B. DROP VIEW
C. ALTER VIEW
D. REPLACE VIEW
=> D. REPLACE VIEW.
----------------------------------------------
15. Which data dictionary view shows all the views accessible to the current user?
A. DBA_VIEWS
B. USER_VIEWS
C. ALL_VIEWS
D. Both B and C
=> B. USER_VIEWS 
----------------------------------------------
16.Which of the following is generally not possible on a complex view?
A) Insert through the view
B) Select from the view
C) Create the view with WHERE condition
D) Use the view in a query
=> A) Insert through the view.
----------------------------------------------
17.What is an inline view?
A) A permanent view stored in the database
B) A subquery in the FROM clause, treated as a temporary view for that query
C) A view created with WITH READ ONLY
D) A synonym for a materialized view
=> 
----------------------------------------------
18.Which of the following statements about inline views is true?
A) They must be created with CREATE VIEW
B) They exist only during query execution
C) They can be indexed directly
D) They store data permanently
=> 
----------------------------------------------
Q.. What is subquery?
==> query within query is called as subquery.
	Subquery also called inner qury or nested query.
	- Subquery are classified into 5 different types. 
		1. single row subquery
		2. multi row subquery
		3. multi-column subquery
		4. inline view
		5. correlated subquery
	
----------------------------------------------
Q.. Single row subquery?
==> The query which return single row and single column is called single row subquery.
	- in single row subquery we use single row comparison operator like =,>,<,>=,=<,!=
	- if inner query return multiple row and in outer query we have used single comparison 
	  operator then we will get an error 
----------------------------------------------
Q.. Display employee details whose salary is greater than that of 101 empno?
----------------------------------------------
Q.. Disply employee details whose salary is greater than 101 and department is 
	same as that of Nayantara?	
----------------------------------------------
Q.. display employee whose job is same as employee 110.
----------------------------------------------
Q.. Multi row subquery?
==> - The query which return multiple row ans single column is called multi row subquery.
	- If inner query return multiple row then in outer query we need to use muti row 
	  comparison operator like IN,ANY,ALL.
----------------------------------------------
Q.. Disaply employee details whose city is same as that employee whose name start with 'R'?
----------------------------------------------
Q.. Multi-column subquery?
==> - query which return multiple columns and multiple row is called as multi-column subquery.
	- In multi-column subquery is used to compare multiple row at a time.
	- Operators used in multi-column subquery IN,=,EXISTS
----------------------------------------------
Q.. write a query to display all employee who belong to same department and city as employee 
	working in mumbai.	
----------------------------------------------
Q.. write a sql query to display employee details whose department id and city as same as Ajay?
----------------------------------------------
Q.. write a sql query to display employee details whose designation id and city as same as Ajay?
----------------------------------------------
Q.. What is difference between muli-row subquery and multi-column subquery?
==> - multi-row subquery return multiple row with single column where as 
	  multi-column subquery return multiple row and multiple column 
	- multi-row subquery use comparison operator like IN,ANY,ALL where as 
	  multi-column subquery use comparison operator like IN,=,EXISTS
----------------------------------------------
Q.. What is Inline view?
==> Inline view is subquery in the FORM clause of sql statement.
	- example	
		select empname,empno,doj from (select * from employee);
----------------------------------------------
Q.. What is correlated query?
==> A correlated query is type of subquery which is depend on outer query
	and run once for each row of outer query.
	- operator used in correlated query is : IN,ANY,ALL,EXIST.
----------------------------------------------
Q.. How to create table from existing table?
==> To create new table using existing table syntax: 
	create table new_table_name as select query;
	
----------------------------------------------	
Q..	How to copy structure of table?
==> create table new_table_name as select query where 1=0;

----------------------------------------------
Q.. How to copy structure with required data?
==> create table new_table_name as select query where condition;
----------------------------------------------
Q.. What are the single row comparison operator?
==> Single row operator compaire single value at a time 
	single row operator are 
		1. equal to = 
		2. not equal to !=
		3. greater than > 
		4. less than < 
		5. greater than equal to >=
		6. less than equal to <= 
		7. Not equal to  <> , !=
----------------------------------------------
Q.. Multi row comparison operator?
==> Multi row operator compaire multi values at a time 
	Multi row operator are IN,ANY,ALL/SOME,EXIST 
----------------------------------------------
Q.. Multi row operator 'IN'? 
==> In operator is used to specify multiple values in where clause.
	Syntax: 
		select * from employee where emp id IN(1,2,3,4)
	- IN clause allow up to 1000 values 
----------------------------------------------
Q.. What is ALL operator?
==> - it is multi row operator 
	- it is used with single row comparison operator 
	- it compare value from outer value with all values returned by inner query 
		and it return true if all values are matched.
	- Syntax: 
		select clm1,clm2 from table_name where column_name single row operator ALL(inner query)
	- e.g 
		display empno,empname,salary of those employees whose salary greater than 
		every employee in department 4 
		=> select empno,empname,salary from employee 
		   where salary > ALL(select * from employee where department=4 )
----------------------------------------------
Q.. What is ANY operator?
==> - ANY operator is multi row operator 
	- it is used single row comparison operator 
	- it compare value from outer query with all values returned by inner query 
	  and returns true if any value is matched in inner query.
	- Syntax: 
		select clm_name from table_name where clm_name single_row_operator ANY(inner query)
	- e.g : display empno,empname,salary of those employee whose salary greater than 
	  any one employee in department 4. 
	  
	  select empno,empname,salary from employee 
	  where salary > ANY(select salary from employee where deptId=4)
	  
	  select empno,empname,salary from employee 
	  where salary> SOME (select salary from employee where deptId=4)
----------------------------------------------
Q.. What is difference between ALL and ANY?
==> ALL return all value is condition is true where as ANY return true if one match is found.
----------------------------------------------
Q.. What is EXISTS operator?
==> - EXISTS is boolean operator
	- it is used to check row is exists or not.
	- if sub query return one or more rows then it return true 
	- if sub query return no rows then it return false 
	- This operator is used with correlated sub query because it is more powerful for row-by-row 
	  comparison but we can also use with non-correlated query.
	- for example 
		write query to display empno from employee_details but those whose department is exist.
	 => select empno from employee_details where EXIST(select 1 from department d where e.dept_no=d.deptno)
----------------------------------------------
Q.. What is difference between IN and EXISTS?
==> IN operator is used to check value where as EXISTS is used to check only existance of row 
----------------------------------------------
Q.. Between subquery and join which is best? Why?
==> Between subquery and join join is best 
	performance wise inner query is slow.inner query execute first and then its result is used in outer query.
	- joins are recommended to use 
----------------------------------------------
Q.. What is null in oracle?
==> - null is special type of value it is different than zero or blank.null means not present/absent 
	- null handling is most confusing part in oracle because some operator conside null but some ignore 
	
	1. Any arithmatic operator with null
		- select 100+null => null 
		- select 100-null => null 
	
	2. null with single row operator
		- null=null => false 
		- 1=null => false 
		- 'a'=null => false 
		- select * from employee where dept_id=null => no data found (wrong way to find null value)
		- select * from employee where dept_id IS NULL => (THIS IS CORRECT WAY)
		- select * from employee where dept_id != null => no data found(wrong way to find null values)
		- select * from employee where dept_id IS NOT NULL.
	
	3. NULL in multi row comparison operator?
		1. EXISTS: ingnore null check only existance of row 
		
		2. IN : In operator ignore null values 
			select * from employee where empno IN(100,101,null) oracle convert this query into as below 
			select * from employee where empno IN(100,101)
			
		3. NOT IN: NOT IN operator consider null values 
			NOT IN=>Total condition fails=> return no rows 
			
			select * from employee where dept_id NOT IN(100,101,null)
			
		4. ANY or ALL consider the NULL values 	
----------------------------------------------
Q.. Which of the following best defines a subquery?
A) A query that retrieves rows from multiple tables
B) A query nested inside another SQL statement
C) A query that always uses GROUP BY
D) A query that only runs independently
==> B) A query nested inside another SQL statement
----------------------------------------------
Q.. Where can a subquery be placed in Oracle SQL?
A) WHERE clause
B) FROM clause
C) HAVING clause
D) All of the above
==> D) All of the above
----------------------------------------------
Q.. A subquery that returns exactly one value is called?
A) Multi-row subquery
B) Correlated subquery
C) Single-row subquery
D) Inline view
==> C) Single-row subquery
----------------------------------------------
Q.. Which operators are used with single-row subqueries?
A) =, <, >, <=, >=, !=
B) IN, ANY, ALL
C) EXISTS, NOT EXISTS
D) BETWEEN, LIKE
==>A) =, <, >, <=, >=, !=
----------------------------------------------
Q.. Which operators are used with multi-row subqueries?
A) IN, ANY, ALL
B) =, <, >
C) BETWEEN, LIKE
D) None
==> A) IN, ANY, ALL
----------------------------------------------
Q.. Which of the following is NOT true about subqueries?
A) Subquery must be enclosed in parentheses
B) Subquery can return multiple columns always
C) Subquery can be nested inside SELECT, WHERE, HAVING
D) Subquery executes before the outer query (except correlated subquery)
==> B) Subquery can return multiple columns always
----------------------------------------------
Q.. A subquery in the FROM clause is called:
A) Inline view
B) Multi-column subquery
C) Correlated subquery
D) Join
==> A) Inline view
----------------------------------------------
Q.. A correlated subquery is:
A) Independent of outer query
B) Executes once for the outer query
C) Executes once for each row of the outer query
D) Same as inline view
==> C) Executes once for each row of the outer query
----------------------------------------------
Q.. Which keyword is used to check if a value returned by subquery exists?
A) ALL
B) ANY
C) EXISTS
D) UNION
==> C) EXISTS
----------------------------------------------
Q.. What will happen if a single-row subquery returns multiple rows?
A) Oracle automatically picks the first row
B) Error: ORA-01427: single-row subquery returns more than one row
C) Oracle ignores extra rows
D) Query executes successfully
==> B) Error: ORA-01427: single-row subquery returns more than one row
----------------------------------------------
Q.. What happens if a multi-row subquery returns no rows?
A) Outer query fails
B) Outer query returns no rows if operator is IN
C) Oracle throws error
D) Query result is NULL
==> B)Outer query returns no rows if operator is IN
----------------------------------------------
Q.. Which operator returns TRUE if the comparison is true for at least one value returned by subquery?
A) ALL
B) ANY/SOME
C) EXISTS
D) IN
==> B) ANY/SOME
----------------------------------------------
Q.. Which operator returns TRUE only if the comparison is true for all values returned by subquery?
A) ALL
B) ANY/SOME
C) EXISTS
D) IN
==> A) ALL
----------------------------------------------
Q.. Which subquery type can return multiple columns?
A) Inline view
B) Multi-column subquery
C) Single-row subquery
D) EXISTS subquery
==> B) Multi-column subquery
----------------------------------------------
Q.. What is the main advantage of using subqueries over joins?
A) Always faster
B) Always easier to optimize
C) Easier to write and understand for filtering with aggregates
D) Required in every query
==> C) Easier to write and understand for filtering with aggregates
----------------------------------------------
Q.. In a correlated subquery, the inner query:
A) Runs once before outer query
B) Runs once for each row in the outer query
C) Runs only if outer query fails
D) Runs after the outer query completes
==> B) Runs once for each row in the outer query
----------------------------------------------
Q.. What is the difference between IN and EXISTS in subqueries?
A) IN checks for values; EXISTS checks for existence of rows
B) IN is faster always; EXISTS is slower always
C) Both are same internally
D) EXISTS cannot be used in Oracle
==> A) IN checks for values; EXISTS checks for existence of rows
----------------------------------------------
Q.. Which of the following is true for inline views?
A) They are temporary views defined in FROM clause
B) They can be used like a table in joins
C) They vanish once query execution is complete
D) All of the above
→ **D) All of the above**
----------------------------------------------
**19. Which type of subquery is used in this query?
SELECT ename FROM employee e WHERE EXISTS (SELECT 1 FROM dept d WHERE d.deptno = e.deptno);
A) Inline view
B) Multi-row subquery
C) Correlated subquery
D) Multi-column subquery
→ **C) Correlated subquery**
----------------------------------------------
Q.. What is CASE EXPRESSION ?
==> CASE is not function it it expression 
	it is used to add conditional logic in sql query.
	CASE expression is used in where,order by,having,group by clause 
	Syntax: 
		CASE expression 
			WHEN value 1 THEN result 1
			WHEN value 2 THEN result 2 
			.
			.
			.
			ELSE resultN
		END
	- expression is compared with provided list of values 
	- if expression and value 1 matched then it return result 1,if expression and value 2 matched 
	  then it return result 2 returned and so on 
	  if expression and provided value is not matched then it return ELSE 
	- ELSE is optional part if we don't provide ELSE part then bydefault it is null.
----------------------------------------------
### **1. What is the purpose of the CASE expression in SQL?**

A) To create new tables in the database
B) To perform conditional logic and return different values based on conditions
C) To join multiple tables together
D) To enforce constraints on columns
**→ B) To perform conditional logic and return different values based on conditions**

----------------------------------------------

### **2. Which of the following is true about the CASE expression?**

A) It can only be used in the WHERE clause
B) It is a control-of-flow structure used to repeat a query multiple times
C) It evaluates conditions and returns values like an IF-THEN-ELSE structure
D) It always requires an ELSE statement
**→ C) It evaluates conditions and returns values like an IF-THEN-ELSE structure**

----------------------------------------------

### **3. Given this query:**

```sql
SELECT ename,  
       CASE WHEN salary > 5000 THEN 'High'  
            ELSE 'Low'  
       END AS salary_category  
FROM Employee;
```

**What will be the output for an employee with a salary of 3000?**
A) High
B) Low
C) NULL
D) Error
**→ B) Low**

----------------------------------------------

### **4. Where can the CASE expression be used?**

A) SELECT, WHERE, GROUP BY, ORDER BY clauses
B) Only in SELECT clause
C) Only inside functions
D) It cannot be used in SQL queries
**→ A) SELECT, WHERE, GROUP BY, ORDER BY clauses**

----------------------------------------------

### **5. What will this query return if no condition matches and there is no ELSE clause?**

```sql
SELECT ename,  
       CASE WHEN salary > 10000 THEN 'High'  
       END AS salary_category  
FROM Employee;
```

A) It will throw an error
B) It will return 'High' for all rows
C) It will return NULL for rows where the condition is not met
D) It will skip rows where the condition is not met
**→ C) It will return NULL for rows where the condition is not met**
----------------------------------------------
Q.. What is decode function in oracle?
==> Decode is predefined function in oracle.
	It is simplified version of Case expression.
	Syntax: 
		DECODE(expression,search1,result1,search2,result2.....default) 
	default is optional value 
	expression may be column name or value 
	for decode 3 input argument compulsary required 
	1.expression 2. search 3. result otherwise we will get an error 
----------------------------------------------
Q.. write sql query to display empname,empno,gender,gender_desc in gender_desc M=>Male F=>Female?
----------------------------------------------
Q.. write sql query to categorizes employees into three groups based on their salary 
	'high' if the salary is greater than 30000
	'medium' if the salary is between 20k to 30k 
	'low' if the salary is less than 10k 
----------------------------------------------
Q.. Limitation of Decode?
==> It is oracle specific for other detabase it is not supported.
	we can't use logical conditions like salary>30k,salary between 20k to 30k in decode 
----------------------------------------------
Q.. What is difference between Case and Decode?
==> Case is widely supported where as decode is oracle specific.
	Case support wide range of conditions but decode support only equality condition
	For more complex or more conditions Case is recommended to use where as Decode is not recommended to use 
----------------------------------------------
Q.. What is Rollup function?
==> Rollup is extention of group by clause 
	with the help of Rollup function we can find sub total and grant total 
	it create sub total and grant total in heirarchical manner 
	Syntax: 
		group by rollup(clm1,clm2,...N)
	Execution of Rollup 
		-> Grouping 
		-> sub Total 
		-> Grant Total 
		-> Null represent sub total and grant total 
		-> If we have n columns in Rollup we have n+1 combinations 
----------------------------------------------
Q.. What is CUBE function?
==> CUBE is extention of group by clause. 
	It calculate sub total and grant total for all possible combinations 
	Syntax: 
		group by cube(clm1,clm2....N)
	If we have N columns in CUBE we have N^2 combinations 
----------------------------------------------
### **1. What does the ROLLUP operator do in Oracle SQL?**
A) Calculates subtotals for all possible combinations of columns
**B) Calculates hierarchical subtotals from leftmost column to rightmost ✅**
C) Sorts the data in ascending order
D) Eliminates duplicate rows
----------------------------------------------
### **2. Which of the following statements is true? (Given GROUP BY ROLLUP(dept,job))**
A) You get subtotals for each dept and each job separately
B) You get only the grand total
**C) You get subtotal for each dept and the grand total ✅**
D) You get all combinations of dept and job
----------------------------------------------
### **3. How do you identify subtotal or grand total rows in a ROLLUP query?**
A) Using the SUM() function
**B) Using the GROUPING() function ✅**
C) Using DISTINCT keyword
D) Using ORDER BY clause
----------------------------------------------
### **4. What will the following query return?**
```sql
SELECT dept, job, SUM(salary)
FROM Employee_Test
GROUP BY ROLLUP(dept, job);
```
A) Only total salary for each department
B) Salary for each employee
**C) Salary by dept, salary by dept+job, and grand total ✅**
D) All possible combinations of dept and job with subtotals
----------------------------------------------
### **5. Difference between ROLLUP and CUBE is:**
A) ROLLUP generates all possible subtotals; CUBE generates hierarchical subtotals
**B) ROLLUP generates hierarchical subtotals; CUBE generates all possible subtotals ✅**
C) Both are the same
D) ROLLUP cannot be used with aggregate functions
----------------------------------------------
### **6. What is the purpose of the CUBE operator in SQL?**
A) It computes only grand totals
B) It creates hierarchical subtotals
**C) It generates all possible combinations of subtotals and totals for specified columns ✅**
D) It filters out NULL values from the result
----------------------------------------------
### **7. For GROUP BY CUBE(dept, job), how many grouping sets will be generated?**
A) 2
B) 3
C) 4
**D) 4 ✅**
----------------------------------------------
### **8. What is the difference between ROLLUP(dept, job) and CUBE(dept, job)?**
A) ROLLUP generates all combinations, CUBE generates only hierarchical subtotals
**B) ROLLUP generates hierarchical subtotals, CUBE generates all combinations of grouping columns ✅**
C) There is no difference
D) CUBE can only be used with numeric columns
----------------------------------------------
### **9. Given the following query:**
```sql
SELECT dept, job, SUM(salary)
FROM Employee_Test
GROUP BY CUBE(dept, job);
```
**Which of the following rows will not appear?**
A) Grouped by both dept and job
B) Grouped by dept only
C) Grouped by job only
D) Grouped by neither dept nor job (grand total)
**-> All are correct ✅**
----------------------------------------------
### **10. You can use the GROUPING() function with CUBE to:**
A) Identify rows that are duplicates
**B) Distinguish between detail rows and subtotal/grand total rows ✅**
C) Sort the output in ascending order
D) Create indexes automatically
----------------------------------------------
### **11. For GROUP BY CUBE(dept, job, location), how many grouping sets will be created?**
A) 3
B) 6
C) 7
**D) 8 ✅**
----------------------------------------------
### **12. Which use case best fits the use of CUBE?**
A) Generating simple totals by one column
B) **Producing multidimensional reports across several attributes ✅**
C) Filtering results based on specific conditions
D) Encrypting sensitive data
----------------------------------------------
### **13. Which statement is true when you use CUBE?**
A) It only works with numeric columns
B) It automatically sorts data in ascending order
**C) It calculates aggregate values at all levels of specified columns ✅**
D) It removes all rows with NULL values
----------------------------------------------
Q.. What is analytical function?
==> - The function which perform calculation across the set of rows related to current rows 
	  without collapsing into groups is called analytical function.
	- they operate over window of row defined by over clause.
	- Ranking analytical function 
		1. rank()
		2. dense_rank()
		3. row_number()
		
	- Aggeregate analytical function 
		1. avg()
		2. min()
		3. max()
		4. count()
		5. sum()
	
	- Syntax of aggregate function 
		Aggeregate_function() over(partition by column_name order by column asc/desc
----------------------------------------------
Q.. RANK() analytical function?
==> This function assign rank to each row within partition but skip subsequent rank when there is tie.
	- Rank() function does't accept argument.
----------------------------------------------
Q.. Assign rank to each employee based on their salary in desending order?
==> select empno,empname,salary,rank() over(order by salary desc)as salary_descending from employee
----------------------------------------------
Q.. Assign department wise rank to each employee based on their salary in ascending order?
==> select empno,empname,salary,rank() over(partition by dept_id order by salary asc) from employee.
----------------------------------------------
Q.. Dense_rank() analytical function?
==> Dense_rank function assign rank to each row but don't skip if there is subsequent tie
	Syntax : 
		Dense_rank() over(partition by column_name order by column_name asc/desc)
	
	Dense_rank does't accept input argument 
----------------------------------------------
Q.. assign rank to employee based on their salary in descending order?
==> select empno,empname,salary,dense_rank() over(order by salary desc) from employee
----------------------------------------------
Q.. assing rank to employee bases on department wise and salary in descending order?
==> select empno,empname,salary,dense_rank() over(partition by dept_id order by salary desc) from employee
----------------------------------------------
Q.. What is difference between Rank() and dense_rank()?
==> Rank() is use to rank row but if their is subsequent then it tie where as 
	dense_rank() is use to rank row but they doesn’t tie if there is subsequent 
----------------------------------------------
Q.. Row_number() analytical function?
==> It assing rank to row but it assign unique number to row 
----------------------------------------------
Q.. Write sql query to disply highest salary employee details like empno,empname?
==> there are two way to display highest salary 
	1. using subquery 
		select * from employee where salary =(select max(salary) from employee)
		
	2. using analytical function 
		select * from(select empno,empname,salary,dense_rank() 
		over(order by salary desc)as rank from employee) where rank=1
----------------------------------------------
Q.. write sql query to display department wise highest salary of employee?
==> select * from (select empno,empname,salary,dept_id,
	dense_rank() over(partition by dept_id order by salary desc)as rank from employee)where rank=1
----------------------------------------------
Q.. write sql query to display second highest salary of employee?
==> select * from(select empno,empname,salary,dept_id,
	dense_rank()over(order by salary desc)as rank )where rank=2
----------------------------------------------
Q.. Write sql query to display department wise 3 highest salary?
==> select * from (select empno,empname,salary,dept_name,
	dense_rank() over(partition by dept_id order by salary desc)as rank from employeee) where rank=3
----------------------------------------------
Q.. display top 3 highest salary employee?
==> select * from (select empno,empname,salary,
	dense_rank() over(order by salary desc) from employee)where rank<=3
----------------------------------------------
Q.. what is analytical aggregate function?
==> there are 5 aggregate function 
	1. min
	2. max 
	3. sum
	4. avg 
	5. count 
	- syntax of aggregate analytical function is 
		select clm1,clm2....analytical_function(clm_name) 
		over(partition by clm_name order by clm_name window_frame_clause) from table_name 
		
	- partition by => used to divide data into subset 
	- order by => used to sort data 
	- window_frame_clause => to specify row range 
----------------------------------------------
Q.. Precedence order for partition by,order by,window_frame_clause?
==> 1. partition by 
	2. order by 
	3. window_frame_clause
----------------------------------------------
Q.. what is mean by running value?
==> running value means current value plus next row or previous row value 
----------------------------------------------
Q.. calculate sum of salary from current row to next 1 row?
==> select empno,empname,salary,sum(salary)
	over(order by salary desc ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) from 
----------------------------------------------
Q.. calculate sum of salary from current row to next 2 row?
==> select empno,empname,salary,sum(salary)
	over(order by salary desc ROWS BETWEEN CURRENT ROW AND 3 FOLLOWING)AS RANK from employee
----------------------------------------------
Q.. calculate sum of salary from current row to next all rows?
==> select empno,empname,salary,
	sum(salary) over(order by salary desc rows between current row and unbounded following)as rank 
	from employee;
----------------------------------------------
Q.. calculate sum of salary from current row to 1 preceding?
==> select empno,empname,salary,
	sum(salary) over(order by salary desc rows between 1 preceding to current row)as rank 
	from employee;
----------------------------------------------
Q.. Calculate sum of salary with 2 preceding row?
==> select empno,empname,salary,
	sum(salary) over(order by desc rows between 2 preceding and current row)as rank 
	from employee;
----------------------------------------------
Q.. Calculate sum of salary with all preceding row?
==> select empno,empname,salary,
	sum(salary) over(order by salary desc rows between unbounded preceding and current row)as rank 
	from employee;
----------------------------------------------
Q.. calculate sum of salary with all preceding row and all following rows?
==> select empno,empname,salary,
	sum(salary) over(order by salary desc rows between 
	unbounded preceding and unbounded following)as rank 
	from employee
	
----------------------------------------------
Q.. What is difference between aggregate function and analytical aggregate function?
==> - Noramal aggregate function group similar type of values and return one result as per group 
	  where as
	  analytical aggregate function perform calculation across the set of rows related 
	  to current row without collapsing it into group 
	- aggregate function use with group by clause where as analytical aggregate function use over clause 
	- if we want grant total or group wise total then go with aggregate function where as 
	  if we want group wise running total then we can go with analytical aggregate function.
----------------------------------------------
Q.. What is mean by Transaction?
==> - A group of operation executed together as one unit.
	- Operation may be read,insert,update or delete.
	- All operation must be succeed or fail together.if anyone operation fails then total 
	  Transaction is rolled back.
	- To maintain data integrity,RDBMS ensure that each transaction should follow the ACID Properties 
	- Integrity means data is correct,valid and reliable
----------------------------------------------
Q.. ACID Properties?
==> ACID stand for 
	A=> Atomicity
	C=> Consistency
	I=> Isolation 
	D=> Durability
----------------------------------------------
Q.. What is Atomicity?
==> Atomicity means all or nothing 
	- Either all operation within transaction are successfully completed 
	  and committed to the database or none of them are.If anyone operation fails then 
	  entire transaction is rolled back and data is restored to its original state.
	- To achive this Oracle uses Rollback,Savepoint,commit.
	- Example:
		sending money online : Either money is deducted from your account and added to the receiver's 
		account or whole transaction is fails - no in between 
----------------------------------------------
Q.. What is consistency?
==> Consistency means database must be consistent state before and after the transaction.
	- To achieve this oracle use PK,FK,Triggers
	- If a transaction voilet database rule or constraints,it should be rejected,ensuring that 
	  consistent data exists after the transaction.
	- Example: You can't transfer money more than you have.
----------------------------------------------
Q.. What is Isolation?
==> Multiple transaction can run at the same time without affecting each other's result 
	- oracle uses lock and isolation levels to to isolate the transaction.
	- Oracle feature used: isolation levels (read committed)
----------------------------------------------
Q.. What is Durability?
==> Once a transaction is committed the changes are permanent-even if there is system crash or power failure.
	- Once you send a message and see "delivered" , it say delivered even if your phone dies 
	- Oracle feature used : Redo logs,flashback,Datafiles
----------------------------------------------
Q.. How to check oracle version?
==> select * from v$version;
----------------------------------------------
Q.. What is v$version in oracle?
==> v$version is dyanamic performance view in oracle database.
	it display version information for the oracle database and its components 
----------------------------------------------
Q.. How do you connect database?
==> we use sql developer to connect database.
----------------------------------------------
Q.. Tell me steps to connect database?
==> 1. open sql developer tool.
	2. click on "create connection"
	3. fill connection details like user name,password,hostname 
	4. Click on test connection 
	5. click on connect 
----------------------------------------------
Q.. select LOWER('TEST') from dual;
==> test
----------------------------------------------
Q.. select LOWER('TEST','sql') from dual;
==> we will get an error "invalid number of argument"
----------------------------------------------
Q.. select LOWER(empname) from dual;
==> we will get an error because string is not enclosed in single quote
----------------------------------------------
Q.. select LOWER() from dual;
==> we will get an error 
----------------------------------------------
Q.. select LOWER(null) from dual;
==> null (- null is special type value )
----------------------------------------------
Q.. select LOWER('NULL') from dual;
==> null (null in smallcase not special value - )
----------------------------------------------
Q.. select length('empname') from employee;
==> it return all rows from employee with 7 length
----------------------------------------------
Q.. select concat('test',null) from dual
==> test
----------------------------------------------
Q.. select concat(null,null) from dual;
==> null
----------------------------------------------
Q.. select replace('TESTING','T',null) from dual;
==> ESTING
----------------------------------------------
Q.. select lpad('TESTING',-5,'*') from dual;
==> null
----------------------------------------------
Q.. select lpad('TESTING',15,null) from dual;
==> null
----------------------------------------------
Q.. select ltrim('##testing',null) from dual;
----------------------------------------------
----------------------------------------------














 